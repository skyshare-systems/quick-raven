// Generated by @wagmi/cli@1.0.0 on 5/19/2023 at 12:45:22 AM
import {
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
  useContractEvent,
  UseContractEventConfig,
} from "wagmi";
import {
  ReadContractResult,
  WriteContractMode,
  PrepareWriteContractResult,
} from "wagmi/actions";

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DexAggregatorBSC
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const dexAggregatorBscABI = [
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "WETH",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_dexRouter", internalType: "address", type: "address" },
      { name: "_tokenIn", internalType: "address", type: "address" },
      { name: "_tokenOut", internalType: "address", type: "address" },
      { name: "_amountIn", internalType: "uint256", type: "uint256" },
      { name: "_amountOutMin", internalType: "uint256", type: "uint256" },
      { name: "_to", internalType: "address", type: "address" },
    ],
    name: "swap",
    outputs: [],
  },
] as const;

export const dexAggregatorBscAddress =
  "0x71e711Cd6b13125f53A5c238B015841a3c8315D7" as const;

export const dexAggregatorBscConfig = {
  address: dexAggregatorBscAddress,
  abi: dexAggregatorBscABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BscUsdtToken
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bscUsdtTokenABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_ticker", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_account", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

export const bscUsdtTokenAddress =
  "0x44fDA5d55Cd5bFD262DcF0b90F2F105211131d18" as const;

export const bscUsdtTokenConfig = {
  address: bscUsdtTokenAddress,
  abi: bscUsdtTokenABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BscUsdcToken
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bscUsdcTokenABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_ticker", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_account", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

export const bscUsdcTokenAddress =
  "0x45D463BFf2e01A125298BF9271B7BAFBdBeF001f" as const;

export const bscUsdcTokenConfig = {
  address: bscUsdcTokenAddress,
  abi: bscUsdcTokenABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BscWethToken
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bscWethTokenABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_ticker", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_account", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

export const bscWethTokenAddress =
  "0x0518f7B2391916021111BB9Ce53F35a6f8C40Fe3" as const;

export const bscWethTokenConfig = {
  address: bscWethTokenAddress,
  abi: bscWethTokenABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BscMaticToken
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bscMaticTokenABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_ticker", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_account", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

export const bscMaticTokenAddress =
  "0x9570B7D0e54f2AAed59F6615e2be18637A82d881" as const;

export const bscMaticTokenConfig = {
  address: bscMaticTokenAddress,
  abi: bscMaticTokenABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BscLpUsdtUsdcLP
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bscLpUsdtUsdcLpABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_ticker", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_account", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

export const bscLpUsdtUsdcLpAddress =
  "0xfF0B599Cb9514064dE1e29a85FC32E9b0e59a65f" as const;

export const bscLpUsdtUsdcLpConfig = {
  address: bscLpUsdtUsdcLpAddress,
  abi: bscLpUsdtUsdcLpABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BscLpUsdtMaticLP
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bscLpUsdtMaticLpABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_ticker", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_account", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

export const bscLpUsdtMaticLpAddress =
  "0x7a36666c7e02ED1F3517f7A921612d03B916C8DF" as const;

export const bscLpUsdtMaticLpConfig = {
  address: bscLpUsdtMaticLpAddress,
  abi: bscLpUsdtMaticLpABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BscLpUsdtWethLP
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bscLpUsdtWethLpABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_ticker", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_account", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

export const bscLpUsdtWethLpAddress =
  "0x0d64d8c32844d3565C8109105e2346e92E305A98" as const;

export const bscLpUsdtWethLpConfig = {
  address: bscLpUsdtWethLpAddress,
  abi: bscLpUsdtWethLpABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BscLpUsdcWethLP
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bscLpUsdcWethLpABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_ticker", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_account", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

export const bscLpUsdcWethLpAddress =
  "0x1d4405431F1fB20993315950890646aEE7675E3f" as const;

export const bscLpUsdcWethLpConfig = {
  address: bscLpUsdcWethLpAddress,
  abi: bscLpUsdcWethLpABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BscLpUsdcMaticLP
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bscLpUsdcMaticLpABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_ticker", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_account", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

export const bscLpUsdcMaticLpAddress =
  "0xF041F264B08fBF105e697D812a12C7D0EB6E3F6F" as const;

export const bscLpUsdcMaticLpConfig = {
  address: bscLpUsdcMaticLpAddress,
  abi: bscLpUsdcMaticLpABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BscLpWethMaticLP
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bscLpWethMaticLpABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_ticker", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_account", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

export const bscLpWethMaticLpAddress =
  "0xDD19e92F0877a8d4A61B55c6fBE6B204fa39eFC2" as const;

export const bscLpWethMaticLpConfig = {
  address: bscLpWethMaticLpAddress,
  abi: bscLpWethMaticLpABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DexAggregatorMumbai
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const dexAggregatorMumbaiABI = [
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "WETH",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_dexRouter", internalType: "address", type: "address" },
      { name: "_tokenIn", internalType: "address", type: "address" },
      { name: "_tokenOut", internalType: "address", type: "address" },
      { name: "_amountIn", internalType: "uint256", type: "uint256" },
      { name: "_amountOutMin", internalType: "uint256", type: "uint256" },
      { name: "_to", internalType: "address", type: "address" },
    ],
    name: "swap",
    outputs: [],
  },
] as const;

export const dexAggregatorMumbaiAddress =
  "0xE54da8864c14C924981a40E8B1C37109df4C2D33" as const;

export const dexAggregatorMumbaiConfig = {
  address: dexAggregatorMumbaiAddress,
  abi: dexAggregatorMumbaiABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MumbaiUsdtToken
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const mumbaiUsdtTokenABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_ticker", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_account", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

export const mumbaiUsdtTokenAddress =
  "0xa80f9A21dD4938Ef9Cc4a5CFd97d2e27973b491b" as const;

export const mumbaiUsdtTokenConfig = {
  address: mumbaiUsdtTokenAddress,
  abi: mumbaiUsdtTokenABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MumbaiUsdcToken
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const mumbaiUsdcTokenABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_ticker", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_account", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

export const mumbaiUsdcTokenAddress =
  "0xc1D7eC1a5320ed08b6B019cACC80f29905A7EEfA" as const;

export const mumbaiUsdcTokenConfig = {
  address: mumbaiUsdcTokenAddress,
  abi: mumbaiUsdcTokenABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MumbaiWethToken
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const mumbaiWethTokenABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_ticker", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_account", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

export const mumbaiWethTokenAddress =
  "0xe3aF098836c4641f8EcF9185E49F8C3E74d91348" as const;

export const mumbaiWethTokenConfig = {
  address: mumbaiWethTokenAddress,
  abi: mumbaiWethTokenABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MumbaiMaticToken
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const mumbaiMaticTokenABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_ticker", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_account", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

export const mumbaiMaticTokenAddress =
  "0xDe7B766c83ddd2177087d8f6F8916A3B18722669" as const;

export const mumbaiMaticTokenConfig = {
  address: mumbaiMaticTokenAddress,
  abi: mumbaiMaticTokenABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MumbaiUsdtUsdcLP
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const mumbaiUsdtUsdcLpABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_ticker", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_account", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

export const mumbaiUsdtUsdcLpAddress =
  "0xf98809B88c5143cd6abcBb7431CE5F9A76e53126" as const;

export const mumbaiUsdtUsdcLpConfig = {
  address: mumbaiUsdtUsdcLpAddress,
  abi: mumbaiUsdtUsdcLpABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MumbaiUsdtWethLP
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const mumbaiUsdtWethLpABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_ticker", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_account", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

export const mumbaiUsdtWethLpAddress =
  "0xF3eC1ce03b6a2EC17e90FA0340DcB8E260922D00" as const;

export const mumbaiUsdtWethLpConfig = {
  address: mumbaiUsdtWethLpAddress,
  abi: mumbaiUsdtWethLpABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MumbaiUsdtMaticLP
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const mumbaiUsdtMaticLpABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_ticker", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_account", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

export const mumbaiUsdtMaticLpAddress =
  "0x8d1D0089736a2f3A9eCAe08a356dCB337F55234b" as const;

export const mumbaiUsdtMaticLpConfig = {
  address: mumbaiUsdtMaticLpAddress,
  abi: mumbaiUsdtMaticLpABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MumbaiUsdcWethLP
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const mumbaiUsdcWethLpABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_ticker", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_account", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

export const mumbaiUsdcWethLpAddress =
  "0x0ceD130cdb3966b04B46d0E08776b71ce65230BF" as const;

export const mumbaiUsdcWethLpConfig = {
  address: mumbaiUsdcWethLpAddress,
  abi: mumbaiUsdcWethLpABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MumbaiUsdcMaticLP
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const mumbaiUsdcMaticLpABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_ticker", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_account", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

export const mumbaiUsdcMaticLpAddress =
  "0x12f0E87724054057c240f39cc3466bbD9b6Ef9AF" as const;

export const mumbaiUsdcMaticLpConfig = {
  address: mumbaiUsdcMaticLpAddress,
  abi: mumbaiUsdcMaticLpABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MumbaiWethMaticLP
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const mumbaiWethMaticLpABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_ticker", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_account", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

export const mumbaiWethMaticLpAddress =
  "0x0b5249aA44039a6305597C329E2d790E0DfF6142" as const;

export const mumbaiWethMaticLpConfig = {
  address: mumbaiWethMaticLpAddress,
  abi: mumbaiWethMaticLpABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link dexAggregatorBscABI}__.
 */
export function useDexAggregatorBscRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof dexAggregatorBscABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof dexAggregatorBscABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: dexAggregatorBscABI,
    address: dexAggregatorBscAddress,
    ...config,
  } as UseContractReadConfig<typeof dexAggregatorBscABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link dexAggregatorBscABI}__ and `functionName` set to `"WETH"`.
 */
export function useDexAggregatorBscWeth<
  TFunctionName extends "WETH",
  TSelectData = ReadContractResult<typeof dexAggregatorBscABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof dexAggregatorBscABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: dexAggregatorBscABI,
    address: dexAggregatorBscAddress,
    functionName: "WETH",
    ...config,
  } as UseContractReadConfig<typeof dexAggregatorBscABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link dexAggregatorBscABI}__.
 */
export function useDexAggregatorBscWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof dexAggregatorBscABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<
        typeof dexAggregatorBscABI,
        TFunctionName,
        TMode
      > & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof dexAggregatorBscABI, TFunctionName, TMode>({
    abi: dexAggregatorBscABI,
    address: dexAggregatorBscAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link dexAggregatorBscABI}__ and `functionName` set to `"swap"`.
 */
export function useDexAggregatorBscSwap<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof dexAggregatorBscABI,
          "swap"
        >["request"]["abi"],
        "swap",
        TMode
      > & { functionName?: "swap" }
    : UseContractWriteConfig<typeof dexAggregatorBscABI, "swap", TMode> & {
        abi?: never;
        functionName?: "swap";
      } = {} as any
) {
  return useContractWrite<typeof dexAggregatorBscABI, "swap", TMode>({
    abi: dexAggregatorBscABI,
    address: dexAggregatorBscAddress,
    functionName: "swap",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link dexAggregatorBscABI}__.
 */
export function usePrepareDexAggregatorBscWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof dexAggregatorBscABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: dexAggregatorBscABI,
    address: dexAggregatorBscAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof dexAggregatorBscABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link dexAggregatorBscABI}__ and `functionName` set to `"swap"`.
 */
export function usePrepareDexAggregatorBscSwap(
  config: Omit<
    UsePrepareContractWriteConfig<typeof dexAggregatorBscABI, "swap">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: dexAggregatorBscABI,
    address: dexAggregatorBscAddress,
    functionName: "swap",
    ...config,
  } as UsePrepareContractWriteConfig<typeof dexAggregatorBscABI, "swap">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscUsdtTokenABI}__.
 */
export function useBscUsdtTokenRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof bscUsdtTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscUsdtTokenABI, TFunctionName, TSelectData>,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    ...config,
  } as UseContractReadConfig<typeof bscUsdtTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `functionName` set to `"allowance"`.
 */
export function useBscUsdtTokenAllowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof bscUsdtTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscUsdtTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof bscUsdtTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useBscUsdtTokenBalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof bscUsdtTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscUsdtTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof bscUsdtTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `functionName` set to `"decimals"`.
 */
export function useBscUsdtTokenDecimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof bscUsdtTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscUsdtTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof bscUsdtTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `functionName` set to `"name"`.
 */
export function useBscUsdtTokenName<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof bscUsdtTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscUsdtTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof bscUsdtTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `functionName` set to `"symbol"`.
 */
export function useBscUsdtTokenSymbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof bscUsdtTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscUsdtTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof bscUsdtTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useBscUsdtTokenTotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof bscUsdtTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscUsdtTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof bscUsdtTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscUsdtTokenABI}__.
 */
export function useBscUsdtTokenWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscUsdtTokenABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<typeof bscUsdtTokenABI, TFunctionName, TMode> & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof bscUsdtTokenABI, TFunctionName, TMode>({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `functionName` set to `"approve"`.
 */
export function useBscUsdtTokenApprove<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscUsdtTokenABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof bscUsdtTokenABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof bscUsdtTokenABI, "approve", TMode>({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useBscUsdtTokenDecreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscUsdtTokenABI,
          "decreaseAllowance"
        >["request"]["abi"],
        "decreaseAllowance",
        TMode
      > & { functionName?: "decreaseAllowance" }
    : UseContractWriteConfig<
        typeof bscUsdtTokenABI,
        "decreaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "decreaseAllowance";
      } = {} as any
) {
  return useContractWrite<typeof bscUsdtTokenABI, "decreaseAllowance", TMode>({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useBscUsdtTokenIncreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscUsdtTokenABI,
          "increaseAllowance"
        >["request"]["abi"],
        "increaseAllowance",
        TMode
      > & { functionName?: "increaseAllowance" }
    : UseContractWriteConfig<
        typeof bscUsdtTokenABI,
        "increaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "increaseAllowance";
      } = {} as any
) {
  return useContractWrite<typeof bscUsdtTokenABI, "increaseAllowance", TMode>({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    functionName: "increaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `functionName` set to `"initialize"`.
 */
export function useBscUsdtTokenInitialize<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscUsdtTokenABI,
          "initialize"
        >["request"]["abi"],
        "initialize",
        TMode
      > & { functionName?: "initialize" }
    : UseContractWriteConfig<typeof bscUsdtTokenABI, "initialize", TMode> & {
        abi?: never;
        functionName?: "initialize";
      } = {} as any
) {
  return useContractWrite<typeof bscUsdtTokenABI, "initialize", TMode>({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    functionName: "initialize",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `functionName` set to `"mint"`.
 */
export function useBscUsdtTokenMint<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscUsdtTokenABI,
          "mint"
        >["request"]["abi"],
        "mint",
        TMode
      > & { functionName?: "mint" }
    : UseContractWriteConfig<typeof bscUsdtTokenABI, "mint", TMode> & {
        abi?: never;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<typeof bscUsdtTokenABI, "mint", TMode>({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `functionName` set to `"transfer"`.
 */
export function useBscUsdtTokenTransfer<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscUsdtTokenABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof bscUsdtTokenABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof bscUsdtTokenABI, "transfer", TMode>({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useBscUsdtTokenTransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscUsdtTokenABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<typeof bscUsdtTokenABI, "transferFrom", TMode> & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof bscUsdtTokenABI, "transferFrom", TMode>({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscUsdtTokenABI}__.
 */
export function usePrepareBscUsdtTokenWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscUsdtTokenABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscUsdtTokenABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareBscUsdtTokenApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscUsdtTokenABI, "approve">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscUsdtTokenABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareBscUsdtTokenDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscUsdtTokenABI, "decreaseAllowance">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscUsdtTokenABI, "decreaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareBscUsdtTokenIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscUsdtTokenABI, "increaseAllowance">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    functionName: "increaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscUsdtTokenABI, "increaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareBscUsdtTokenInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscUsdtTokenABI, "initialize">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    functionName: "initialize",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscUsdtTokenABI, "initialize">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareBscUsdtTokenMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscUsdtTokenABI, "mint">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscUsdtTokenABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareBscUsdtTokenTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscUsdtTokenABI, "transfer">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscUsdtTokenABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareBscUsdtTokenTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscUsdtTokenABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscUsdtTokenABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscUsdtTokenABI}__.
 */
export function useBscUsdtTokenEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof bscUsdtTokenABI, TEventName>,
    "abi" | "address"
  > = {} as any
) {
  return useContractEvent({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    ...config,
  } as UseContractEventConfig<typeof bscUsdtTokenABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `eventName` set to `"Approval"`.
 */
export function useBscUsdtTokenApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof bscUsdtTokenABI, "Approval">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof bscUsdtTokenABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `eventName` set to `"Initialized"`.
 */
export function useBscUsdtTokenInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof bscUsdtTokenABI, "Initialized">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    eventName: "Initialized",
    ...config,
  } as UseContractEventConfig<typeof bscUsdtTokenABI, "Initialized">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscUsdtTokenABI}__ and `eventName` set to `"Transfer"`.
 */
export function useBscUsdtTokenTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof bscUsdtTokenABI, "Transfer">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscUsdtTokenABI,
    address: bscUsdtTokenAddress,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof bscUsdtTokenABI, "Transfer">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscUsdcTokenABI}__.
 */
export function useBscUsdcTokenRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof bscUsdcTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscUsdcTokenABI, TFunctionName, TSelectData>,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    ...config,
  } as UseContractReadConfig<typeof bscUsdcTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `functionName` set to `"allowance"`.
 */
export function useBscUsdcTokenAllowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof bscUsdcTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscUsdcTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof bscUsdcTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useBscUsdcTokenBalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof bscUsdcTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscUsdcTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof bscUsdcTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `functionName` set to `"decimals"`.
 */
export function useBscUsdcTokenDecimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof bscUsdcTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscUsdcTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof bscUsdcTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `functionName` set to `"name"`.
 */
export function useBscUsdcTokenName<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof bscUsdcTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscUsdcTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof bscUsdcTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `functionName` set to `"symbol"`.
 */
export function useBscUsdcTokenSymbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof bscUsdcTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscUsdcTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof bscUsdcTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useBscUsdcTokenTotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof bscUsdcTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscUsdcTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof bscUsdcTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscUsdcTokenABI}__.
 */
export function useBscUsdcTokenWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscUsdcTokenABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<typeof bscUsdcTokenABI, TFunctionName, TMode> & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof bscUsdcTokenABI, TFunctionName, TMode>({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `functionName` set to `"approve"`.
 */
export function useBscUsdcTokenApprove<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscUsdcTokenABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof bscUsdcTokenABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof bscUsdcTokenABI, "approve", TMode>({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useBscUsdcTokenDecreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscUsdcTokenABI,
          "decreaseAllowance"
        >["request"]["abi"],
        "decreaseAllowance",
        TMode
      > & { functionName?: "decreaseAllowance" }
    : UseContractWriteConfig<
        typeof bscUsdcTokenABI,
        "decreaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "decreaseAllowance";
      } = {} as any
) {
  return useContractWrite<typeof bscUsdcTokenABI, "decreaseAllowance", TMode>({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useBscUsdcTokenIncreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscUsdcTokenABI,
          "increaseAllowance"
        >["request"]["abi"],
        "increaseAllowance",
        TMode
      > & { functionName?: "increaseAllowance" }
    : UseContractWriteConfig<
        typeof bscUsdcTokenABI,
        "increaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "increaseAllowance";
      } = {} as any
) {
  return useContractWrite<typeof bscUsdcTokenABI, "increaseAllowance", TMode>({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    functionName: "increaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `functionName` set to `"initialize"`.
 */
export function useBscUsdcTokenInitialize<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscUsdcTokenABI,
          "initialize"
        >["request"]["abi"],
        "initialize",
        TMode
      > & { functionName?: "initialize" }
    : UseContractWriteConfig<typeof bscUsdcTokenABI, "initialize", TMode> & {
        abi?: never;
        functionName?: "initialize";
      } = {} as any
) {
  return useContractWrite<typeof bscUsdcTokenABI, "initialize", TMode>({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    functionName: "initialize",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `functionName` set to `"mint"`.
 */
export function useBscUsdcTokenMint<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscUsdcTokenABI,
          "mint"
        >["request"]["abi"],
        "mint",
        TMode
      > & { functionName?: "mint" }
    : UseContractWriteConfig<typeof bscUsdcTokenABI, "mint", TMode> & {
        abi?: never;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<typeof bscUsdcTokenABI, "mint", TMode>({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `functionName` set to `"transfer"`.
 */
export function useBscUsdcTokenTransfer<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscUsdcTokenABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof bscUsdcTokenABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof bscUsdcTokenABI, "transfer", TMode>({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useBscUsdcTokenTransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscUsdcTokenABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<typeof bscUsdcTokenABI, "transferFrom", TMode> & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof bscUsdcTokenABI, "transferFrom", TMode>({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscUsdcTokenABI}__.
 */
export function usePrepareBscUsdcTokenWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscUsdcTokenABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscUsdcTokenABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareBscUsdcTokenApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscUsdcTokenABI, "approve">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscUsdcTokenABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareBscUsdcTokenDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscUsdcTokenABI, "decreaseAllowance">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscUsdcTokenABI, "decreaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareBscUsdcTokenIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscUsdcTokenABI, "increaseAllowance">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    functionName: "increaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscUsdcTokenABI, "increaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareBscUsdcTokenInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscUsdcTokenABI, "initialize">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    functionName: "initialize",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscUsdcTokenABI, "initialize">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareBscUsdcTokenMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscUsdcTokenABI, "mint">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscUsdcTokenABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareBscUsdcTokenTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscUsdcTokenABI, "transfer">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscUsdcTokenABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareBscUsdcTokenTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscUsdcTokenABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscUsdcTokenABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscUsdcTokenABI}__.
 */
export function useBscUsdcTokenEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof bscUsdcTokenABI, TEventName>,
    "abi" | "address"
  > = {} as any
) {
  return useContractEvent({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    ...config,
  } as UseContractEventConfig<typeof bscUsdcTokenABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `eventName` set to `"Approval"`.
 */
export function useBscUsdcTokenApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof bscUsdcTokenABI, "Approval">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof bscUsdcTokenABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `eventName` set to `"Initialized"`.
 */
export function useBscUsdcTokenInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof bscUsdcTokenABI, "Initialized">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    eventName: "Initialized",
    ...config,
  } as UseContractEventConfig<typeof bscUsdcTokenABI, "Initialized">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscUsdcTokenABI}__ and `eventName` set to `"Transfer"`.
 */
export function useBscUsdcTokenTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof bscUsdcTokenABI, "Transfer">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscUsdcTokenABI,
    address: bscUsdcTokenAddress,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof bscUsdcTokenABI, "Transfer">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscWethTokenABI}__.
 */
export function useBscWethTokenRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof bscWethTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscWethTokenABI, TFunctionName, TSelectData>,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    ...config,
  } as UseContractReadConfig<typeof bscWethTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscWethTokenABI}__ and `functionName` set to `"allowance"`.
 */
export function useBscWethTokenAllowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof bscWethTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscWethTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof bscWethTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscWethTokenABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useBscWethTokenBalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof bscWethTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscWethTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof bscWethTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscWethTokenABI}__ and `functionName` set to `"decimals"`.
 */
export function useBscWethTokenDecimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof bscWethTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscWethTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof bscWethTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscWethTokenABI}__ and `functionName` set to `"name"`.
 */
export function useBscWethTokenName<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof bscWethTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscWethTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof bscWethTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscWethTokenABI}__ and `functionName` set to `"symbol"`.
 */
export function useBscWethTokenSymbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof bscWethTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscWethTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof bscWethTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscWethTokenABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useBscWethTokenTotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof bscWethTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscWethTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof bscWethTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscWethTokenABI}__.
 */
export function useBscWethTokenWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscWethTokenABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<typeof bscWethTokenABI, TFunctionName, TMode> & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof bscWethTokenABI, TFunctionName, TMode>({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscWethTokenABI}__ and `functionName` set to `"approve"`.
 */
export function useBscWethTokenApprove<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscWethTokenABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof bscWethTokenABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof bscWethTokenABI, "approve", TMode>({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscWethTokenABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useBscWethTokenDecreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscWethTokenABI,
          "decreaseAllowance"
        >["request"]["abi"],
        "decreaseAllowance",
        TMode
      > & { functionName?: "decreaseAllowance" }
    : UseContractWriteConfig<
        typeof bscWethTokenABI,
        "decreaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "decreaseAllowance";
      } = {} as any
) {
  return useContractWrite<typeof bscWethTokenABI, "decreaseAllowance", TMode>({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscWethTokenABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useBscWethTokenIncreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscWethTokenABI,
          "increaseAllowance"
        >["request"]["abi"],
        "increaseAllowance",
        TMode
      > & { functionName?: "increaseAllowance" }
    : UseContractWriteConfig<
        typeof bscWethTokenABI,
        "increaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "increaseAllowance";
      } = {} as any
) {
  return useContractWrite<typeof bscWethTokenABI, "increaseAllowance", TMode>({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    functionName: "increaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscWethTokenABI}__ and `functionName` set to `"initialize"`.
 */
export function useBscWethTokenInitialize<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscWethTokenABI,
          "initialize"
        >["request"]["abi"],
        "initialize",
        TMode
      > & { functionName?: "initialize" }
    : UseContractWriteConfig<typeof bscWethTokenABI, "initialize", TMode> & {
        abi?: never;
        functionName?: "initialize";
      } = {} as any
) {
  return useContractWrite<typeof bscWethTokenABI, "initialize", TMode>({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    functionName: "initialize",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscWethTokenABI}__ and `functionName` set to `"mint"`.
 */
export function useBscWethTokenMint<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscWethTokenABI,
          "mint"
        >["request"]["abi"],
        "mint",
        TMode
      > & { functionName?: "mint" }
    : UseContractWriteConfig<typeof bscWethTokenABI, "mint", TMode> & {
        abi?: never;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<typeof bscWethTokenABI, "mint", TMode>({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscWethTokenABI}__ and `functionName` set to `"transfer"`.
 */
export function useBscWethTokenTransfer<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscWethTokenABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof bscWethTokenABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof bscWethTokenABI, "transfer", TMode>({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscWethTokenABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useBscWethTokenTransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscWethTokenABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<typeof bscWethTokenABI, "transferFrom", TMode> & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof bscWethTokenABI, "transferFrom", TMode>({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscWethTokenABI}__.
 */
export function usePrepareBscWethTokenWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscWethTokenABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscWethTokenABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscWethTokenABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareBscWethTokenApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscWethTokenABI, "approve">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscWethTokenABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscWethTokenABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareBscWethTokenDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscWethTokenABI, "decreaseAllowance">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscWethTokenABI, "decreaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscWethTokenABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareBscWethTokenIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscWethTokenABI, "increaseAllowance">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    functionName: "increaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscWethTokenABI, "increaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscWethTokenABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareBscWethTokenInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscWethTokenABI, "initialize">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    functionName: "initialize",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscWethTokenABI, "initialize">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscWethTokenABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareBscWethTokenMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscWethTokenABI, "mint">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscWethTokenABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscWethTokenABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareBscWethTokenTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscWethTokenABI, "transfer">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscWethTokenABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscWethTokenABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareBscWethTokenTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscWethTokenABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscWethTokenABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscWethTokenABI}__.
 */
export function useBscWethTokenEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof bscWethTokenABI, TEventName>,
    "abi" | "address"
  > = {} as any
) {
  return useContractEvent({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    ...config,
  } as UseContractEventConfig<typeof bscWethTokenABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscWethTokenABI}__ and `eventName` set to `"Approval"`.
 */
export function useBscWethTokenApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof bscWethTokenABI, "Approval">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof bscWethTokenABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscWethTokenABI}__ and `eventName` set to `"Initialized"`.
 */
export function useBscWethTokenInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof bscWethTokenABI, "Initialized">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    eventName: "Initialized",
    ...config,
  } as UseContractEventConfig<typeof bscWethTokenABI, "Initialized">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscWethTokenABI}__ and `eventName` set to `"Transfer"`.
 */
export function useBscWethTokenTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof bscWethTokenABI, "Transfer">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscWethTokenABI,
    address: bscWethTokenAddress,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof bscWethTokenABI, "Transfer">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscMaticTokenABI}__.
 */
export function useBscMaticTokenRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof bscMaticTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscMaticTokenABI, TFunctionName, TSelectData>,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    ...config,
  } as UseContractReadConfig<typeof bscMaticTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscMaticTokenABI}__ and `functionName` set to `"allowance"`.
 */
export function useBscMaticTokenAllowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof bscMaticTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscMaticTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof bscMaticTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscMaticTokenABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useBscMaticTokenBalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof bscMaticTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscMaticTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof bscMaticTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscMaticTokenABI}__ and `functionName` set to `"decimals"`.
 */
export function useBscMaticTokenDecimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof bscMaticTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscMaticTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof bscMaticTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscMaticTokenABI}__ and `functionName` set to `"name"`.
 */
export function useBscMaticTokenName<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof bscMaticTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscMaticTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof bscMaticTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscMaticTokenABI}__ and `functionName` set to `"symbol"`.
 */
export function useBscMaticTokenSymbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof bscMaticTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscMaticTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof bscMaticTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscMaticTokenABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useBscMaticTokenTotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof bscMaticTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof bscMaticTokenABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof bscMaticTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscMaticTokenABI}__.
 */
export function useBscMaticTokenWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscMaticTokenABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<typeof bscMaticTokenABI, TFunctionName, TMode> & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof bscMaticTokenABI, TFunctionName, TMode>({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscMaticTokenABI}__ and `functionName` set to `"approve"`.
 */
export function useBscMaticTokenApprove<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscMaticTokenABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof bscMaticTokenABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof bscMaticTokenABI, "approve", TMode>({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscMaticTokenABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useBscMaticTokenDecreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscMaticTokenABI,
          "decreaseAllowance"
        >["request"]["abi"],
        "decreaseAllowance",
        TMode
      > & { functionName?: "decreaseAllowance" }
    : UseContractWriteConfig<
        typeof bscMaticTokenABI,
        "decreaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "decreaseAllowance";
      } = {} as any
) {
  return useContractWrite<typeof bscMaticTokenABI, "decreaseAllowance", TMode>({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscMaticTokenABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useBscMaticTokenIncreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscMaticTokenABI,
          "increaseAllowance"
        >["request"]["abi"],
        "increaseAllowance",
        TMode
      > & { functionName?: "increaseAllowance" }
    : UseContractWriteConfig<
        typeof bscMaticTokenABI,
        "increaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "increaseAllowance";
      } = {} as any
) {
  return useContractWrite<typeof bscMaticTokenABI, "increaseAllowance", TMode>({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    functionName: "increaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscMaticTokenABI}__ and `functionName` set to `"initialize"`.
 */
export function useBscMaticTokenInitialize<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscMaticTokenABI,
          "initialize"
        >["request"]["abi"],
        "initialize",
        TMode
      > & { functionName?: "initialize" }
    : UseContractWriteConfig<typeof bscMaticTokenABI, "initialize", TMode> & {
        abi?: never;
        functionName?: "initialize";
      } = {} as any
) {
  return useContractWrite<typeof bscMaticTokenABI, "initialize", TMode>({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    functionName: "initialize",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscMaticTokenABI}__ and `functionName` set to `"mint"`.
 */
export function useBscMaticTokenMint<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscMaticTokenABI,
          "mint"
        >["request"]["abi"],
        "mint",
        TMode
      > & { functionName?: "mint" }
    : UseContractWriteConfig<typeof bscMaticTokenABI, "mint", TMode> & {
        abi?: never;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<typeof bscMaticTokenABI, "mint", TMode>({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscMaticTokenABI}__ and `functionName` set to `"transfer"`.
 */
export function useBscMaticTokenTransfer<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscMaticTokenABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof bscMaticTokenABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof bscMaticTokenABI, "transfer", TMode>({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscMaticTokenABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useBscMaticTokenTransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscMaticTokenABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<typeof bscMaticTokenABI, "transferFrom", TMode> & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof bscMaticTokenABI, "transferFrom", TMode>({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscMaticTokenABI}__.
 */
export function usePrepareBscMaticTokenWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscMaticTokenABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscMaticTokenABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscMaticTokenABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareBscMaticTokenApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscMaticTokenABI, "approve">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscMaticTokenABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscMaticTokenABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareBscMaticTokenDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscMaticTokenABI, "decreaseAllowance">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscMaticTokenABI, "decreaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscMaticTokenABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareBscMaticTokenIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscMaticTokenABI, "increaseAllowance">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    functionName: "increaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscMaticTokenABI, "increaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscMaticTokenABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareBscMaticTokenInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscMaticTokenABI, "initialize">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    functionName: "initialize",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscMaticTokenABI, "initialize">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscMaticTokenABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareBscMaticTokenMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscMaticTokenABI, "mint">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscMaticTokenABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscMaticTokenABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareBscMaticTokenTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscMaticTokenABI, "transfer">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscMaticTokenABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscMaticTokenABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareBscMaticTokenTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscMaticTokenABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscMaticTokenABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscMaticTokenABI}__.
 */
export function useBscMaticTokenEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof bscMaticTokenABI, TEventName>,
    "abi" | "address"
  > = {} as any
) {
  return useContractEvent({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    ...config,
  } as UseContractEventConfig<typeof bscMaticTokenABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscMaticTokenABI}__ and `eventName` set to `"Approval"`.
 */
export function useBscMaticTokenApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof bscMaticTokenABI, "Approval">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof bscMaticTokenABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscMaticTokenABI}__ and `eventName` set to `"Initialized"`.
 */
export function useBscMaticTokenInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof bscMaticTokenABI, "Initialized">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    eventName: "Initialized",
    ...config,
  } as UseContractEventConfig<typeof bscMaticTokenABI, "Initialized">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscMaticTokenABI}__ and `eventName` set to `"Transfer"`.
 */
export function useBscMaticTokenTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof bscMaticTokenABI, "Transfer">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscMaticTokenABI,
    address: bscMaticTokenAddress,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof bscMaticTokenABI, "Transfer">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__.
 */
export function useBscLpUsdtUsdcLpRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof bscLpUsdtUsdcLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtUsdcLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtUsdcLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `functionName` set to `"allowance"`.
 */
export function useBscLpUsdtUsdcLpAllowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof bscLpUsdtUsdcLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtUsdcLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtUsdcLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useBscLpUsdtUsdcLpBalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof bscLpUsdtUsdcLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtUsdcLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtUsdcLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `functionName` set to `"decimals"`.
 */
export function useBscLpUsdtUsdcLpDecimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof bscLpUsdtUsdcLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtUsdcLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtUsdcLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `functionName` set to `"name"`.
 */
export function useBscLpUsdtUsdcLpName<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof bscLpUsdtUsdcLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtUsdcLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtUsdcLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `functionName` set to `"symbol"`.
 */
export function useBscLpUsdtUsdcLpSymbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof bscLpUsdtUsdcLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtUsdcLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtUsdcLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useBscLpUsdtUsdcLpTotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof bscLpUsdtUsdcLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtUsdcLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtUsdcLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__.
 */
export function useBscLpUsdtUsdcLpWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtUsdcLpABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<
        typeof bscLpUsdtUsdcLpABI,
        TFunctionName,
        TMode
      > & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdtUsdcLpABI, TFunctionName, TMode>({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `functionName` set to `"approve"`.
 */
export function useBscLpUsdtUsdcLpApprove<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtUsdcLpABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof bscLpUsdtUsdcLpABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdtUsdcLpABI, "approve", TMode>({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useBscLpUsdtUsdcLpDecreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtUsdcLpABI,
          "decreaseAllowance"
        >["request"]["abi"],
        "decreaseAllowance",
        TMode
      > & { functionName?: "decreaseAllowance" }
    : UseContractWriteConfig<
        typeof bscLpUsdtUsdcLpABI,
        "decreaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "decreaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof bscLpUsdtUsdcLpABI,
    "decreaseAllowance",
    TMode
  >({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useBscLpUsdtUsdcLpIncreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtUsdcLpABI,
          "increaseAllowance"
        >["request"]["abi"],
        "increaseAllowance",
        TMode
      > & { functionName?: "increaseAllowance" }
    : UseContractWriteConfig<
        typeof bscLpUsdtUsdcLpABI,
        "increaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "increaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof bscLpUsdtUsdcLpABI,
    "increaseAllowance",
    TMode
  >({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `functionName` set to `"initialize"`.
 */
export function useBscLpUsdtUsdcLpInitialize<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtUsdcLpABI,
          "initialize"
        >["request"]["abi"],
        "initialize",
        TMode
      > & { functionName?: "initialize" }
    : UseContractWriteConfig<typeof bscLpUsdtUsdcLpABI, "initialize", TMode> & {
        abi?: never;
        functionName?: "initialize";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdtUsdcLpABI, "initialize", TMode>({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    functionName: "initialize",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `functionName` set to `"mint"`.
 */
export function useBscLpUsdtUsdcLpMint<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtUsdcLpABI,
          "mint"
        >["request"]["abi"],
        "mint",
        TMode
      > & { functionName?: "mint" }
    : UseContractWriteConfig<typeof bscLpUsdtUsdcLpABI, "mint", TMode> & {
        abi?: never;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdtUsdcLpABI, "mint", TMode>({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `functionName` set to `"transfer"`.
 */
export function useBscLpUsdtUsdcLpTransfer<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtUsdcLpABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof bscLpUsdtUsdcLpABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdtUsdcLpABI, "transfer", TMode>({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useBscLpUsdtUsdcLpTransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtUsdcLpABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<
        typeof bscLpUsdtUsdcLpABI,
        "transferFrom",
        TMode
      > & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdtUsdcLpABI, "transferFrom", TMode>({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__.
 */
export function usePrepareBscLpUsdtUsdcLpWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdtUsdcLpABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtUsdcLpABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareBscLpUsdtUsdcLpApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdtUsdcLpABI, "approve">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtUsdcLpABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareBscLpUsdtUsdcLpDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof bscLpUsdtUsdcLpABI,
      "decreaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtUsdcLpABI, "decreaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareBscLpUsdtUsdcLpIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof bscLpUsdtUsdcLpABI,
      "increaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtUsdcLpABI, "increaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareBscLpUsdtUsdcLpInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdtUsdcLpABI, "initialize">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    functionName: "initialize",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtUsdcLpABI, "initialize">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareBscLpUsdtUsdcLpMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdtUsdcLpABI, "mint">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtUsdcLpABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareBscLpUsdtUsdcLpTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdtUsdcLpABI, "transfer">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtUsdcLpABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareBscLpUsdtUsdcLpTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdtUsdcLpABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtUsdcLpABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__.
 */
export function useBscLpUsdtUsdcLpEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof bscLpUsdtUsdcLpABI, TEventName>,
    "abi" | "address"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    ...config,
  } as UseContractEventConfig<typeof bscLpUsdtUsdcLpABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `eventName` set to `"Approval"`.
 */
export function useBscLpUsdtUsdcLpApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof bscLpUsdtUsdcLpABI, "Approval">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof bscLpUsdtUsdcLpABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `eventName` set to `"Initialized"`.
 */
export function useBscLpUsdtUsdcLpInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof bscLpUsdtUsdcLpABI, "Initialized">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    eventName: "Initialized",
    ...config,
  } as UseContractEventConfig<typeof bscLpUsdtUsdcLpABI, "Initialized">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpUsdtUsdcLpABI}__ and `eventName` set to `"Transfer"`.
 */
export function useBscLpUsdtUsdcLpTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof bscLpUsdtUsdcLpABI, "Transfer">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpUsdtUsdcLpABI,
    address: bscLpUsdtUsdcLpAddress,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof bscLpUsdtUsdcLpABI, "Transfer">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__.
 */
export function useBscLpUsdtMaticLpRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof bscLpUsdtMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `functionName` set to `"allowance"`.
 */
export function useBscLpUsdtMaticLpAllowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof bscLpUsdtMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useBscLpUsdtMaticLpBalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof bscLpUsdtMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `functionName` set to `"decimals"`.
 */
export function useBscLpUsdtMaticLpDecimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof bscLpUsdtMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `functionName` set to `"name"`.
 */
export function useBscLpUsdtMaticLpName<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof bscLpUsdtMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `functionName` set to `"symbol"`.
 */
export function useBscLpUsdtMaticLpSymbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof bscLpUsdtMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useBscLpUsdtMaticLpTotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof bscLpUsdtMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__.
 */
export function useBscLpUsdtMaticLpWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtMaticLpABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<
        typeof bscLpUsdtMaticLpABI,
        TFunctionName,
        TMode
      > & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdtMaticLpABI, TFunctionName, TMode>({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `functionName` set to `"approve"`.
 */
export function useBscLpUsdtMaticLpApprove<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtMaticLpABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof bscLpUsdtMaticLpABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdtMaticLpABI, "approve", TMode>({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useBscLpUsdtMaticLpDecreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtMaticLpABI,
          "decreaseAllowance"
        >["request"]["abi"],
        "decreaseAllowance",
        TMode
      > & { functionName?: "decreaseAllowance" }
    : UseContractWriteConfig<
        typeof bscLpUsdtMaticLpABI,
        "decreaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "decreaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof bscLpUsdtMaticLpABI,
    "decreaseAllowance",
    TMode
  >({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useBscLpUsdtMaticLpIncreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtMaticLpABI,
          "increaseAllowance"
        >["request"]["abi"],
        "increaseAllowance",
        TMode
      > & { functionName?: "increaseAllowance" }
    : UseContractWriteConfig<
        typeof bscLpUsdtMaticLpABI,
        "increaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "increaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof bscLpUsdtMaticLpABI,
    "increaseAllowance",
    TMode
  >({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `functionName` set to `"initialize"`.
 */
export function useBscLpUsdtMaticLpInitialize<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtMaticLpABI,
          "initialize"
        >["request"]["abi"],
        "initialize",
        TMode
      > & { functionName?: "initialize" }
    : UseContractWriteConfig<
        typeof bscLpUsdtMaticLpABI,
        "initialize",
        TMode
      > & {
        abi?: never;
        functionName?: "initialize";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdtMaticLpABI, "initialize", TMode>({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    functionName: "initialize",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `functionName` set to `"mint"`.
 */
export function useBscLpUsdtMaticLpMint<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtMaticLpABI,
          "mint"
        >["request"]["abi"],
        "mint",
        TMode
      > & { functionName?: "mint" }
    : UseContractWriteConfig<typeof bscLpUsdtMaticLpABI, "mint", TMode> & {
        abi?: never;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdtMaticLpABI, "mint", TMode>({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `functionName` set to `"transfer"`.
 */
export function useBscLpUsdtMaticLpTransfer<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtMaticLpABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof bscLpUsdtMaticLpABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdtMaticLpABI, "transfer", TMode>({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useBscLpUsdtMaticLpTransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtMaticLpABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<
        typeof bscLpUsdtMaticLpABI,
        "transferFrom",
        TMode
      > & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdtMaticLpABI, "transferFrom", TMode>({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__.
 */
export function usePrepareBscLpUsdtMaticLpWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdtMaticLpABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtMaticLpABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareBscLpUsdtMaticLpApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdtMaticLpABI, "approve">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtMaticLpABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareBscLpUsdtMaticLpDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof bscLpUsdtMaticLpABI,
      "decreaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtMaticLpABI, "decreaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareBscLpUsdtMaticLpIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof bscLpUsdtMaticLpABI,
      "increaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtMaticLpABI, "increaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareBscLpUsdtMaticLpInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdtMaticLpABI, "initialize">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    functionName: "initialize",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtMaticLpABI, "initialize">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareBscLpUsdtMaticLpMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdtMaticLpABI, "mint">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtMaticLpABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareBscLpUsdtMaticLpTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdtMaticLpABI, "transfer">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtMaticLpABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareBscLpUsdtMaticLpTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdtMaticLpABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtMaticLpABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__.
 */
export function useBscLpUsdtMaticLpEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof bscLpUsdtMaticLpABI, TEventName>,
    "abi" | "address"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    ...config,
  } as UseContractEventConfig<typeof bscLpUsdtMaticLpABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `eventName` set to `"Approval"`.
 */
export function useBscLpUsdtMaticLpApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof bscLpUsdtMaticLpABI, "Approval">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof bscLpUsdtMaticLpABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `eventName` set to `"Initialized"`.
 */
export function useBscLpUsdtMaticLpInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof bscLpUsdtMaticLpABI, "Initialized">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    eventName: "Initialized",
    ...config,
  } as UseContractEventConfig<typeof bscLpUsdtMaticLpABI, "Initialized">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpUsdtMaticLpABI}__ and `eventName` set to `"Transfer"`.
 */
export function useBscLpUsdtMaticLpTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof bscLpUsdtMaticLpABI, "Transfer">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpUsdtMaticLpABI,
    address: bscLpUsdtMaticLpAddress,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof bscLpUsdtMaticLpABI, "Transfer">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__.
 */
export function useBscLpUsdtWethLpRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof bscLpUsdtWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `functionName` set to `"allowance"`.
 */
export function useBscLpUsdtWethLpAllowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof bscLpUsdtWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useBscLpUsdtWethLpBalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof bscLpUsdtWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `functionName` set to `"decimals"`.
 */
export function useBscLpUsdtWethLpDecimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof bscLpUsdtWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `functionName` set to `"name"`.
 */
export function useBscLpUsdtWethLpName<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof bscLpUsdtWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `functionName` set to `"symbol"`.
 */
export function useBscLpUsdtWethLpSymbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof bscLpUsdtWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useBscLpUsdtWethLpTotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof bscLpUsdtWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdtWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdtWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__.
 */
export function useBscLpUsdtWethLpWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtWethLpABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<
        typeof bscLpUsdtWethLpABI,
        TFunctionName,
        TMode
      > & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdtWethLpABI, TFunctionName, TMode>({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `functionName` set to `"approve"`.
 */
export function useBscLpUsdtWethLpApprove<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtWethLpABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof bscLpUsdtWethLpABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdtWethLpABI, "approve", TMode>({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useBscLpUsdtWethLpDecreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtWethLpABI,
          "decreaseAllowance"
        >["request"]["abi"],
        "decreaseAllowance",
        TMode
      > & { functionName?: "decreaseAllowance" }
    : UseContractWriteConfig<
        typeof bscLpUsdtWethLpABI,
        "decreaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "decreaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof bscLpUsdtWethLpABI,
    "decreaseAllowance",
    TMode
  >({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useBscLpUsdtWethLpIncreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtWethLpABI,
          "increaseAllowance"
        >["request"]["abi"],
        "increaseAllowance",
        TMode
      > & { functionName?: "increaseAllowance" }
    : UseContractWriteConfig<
        typeof bscLpUsdtWethLpABI,
        "increaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "increaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof bscLpUsdtWethLpABI,
    "increaseAllowance",
    TMode
  >({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `functionName` set to `"initialize"`.
 */
export function useBscLpUsdtWethLpInitialize<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtWethLpABI,
          "initialize"
        >["request"]["abi"],
        "initialize",
        TMode
      > & { functionName?: "initialize" }
    : UseContractWriteConfig<typeof bscLpUsdtWethLpABI, "initialize", TMode> & {
        abi?: never;
        functionName?: "initialize";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdtWethLpABI, "initialize", TMode>({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    functionName: "initialize",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `functionName` set to `"mint"`.
 */
export function useBscLpUsdtWethLpMint<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtWethLpABI,
          "mint"
        >["request"]["abi"],
        "mint",
        TMode
      > & { functionName?: "mint" }
    : UseContractWriteConfig<typeof bscLpUsdtWethLpABI, "mint", TMode> & {
        abi?: never;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdtWethLpABI, "mint", TMode>({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `functionName` set to `"transfer"`.
 */
export function useBscLpUsdtWethLpTransfer<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtWethLpABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof bscLpUsdtWethLpABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdtWethLpABI, "transfer", TMode>({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useBscLpUsdtWethLpTransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdtWethLpABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<
        typeof bscLpUsdtWethLpABI,
        "transferFrom",
        TMode
      > & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdtWethLpABI, "transferFrom", TMode>({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__.
 */
export function usePrepareBscLpUsdtWethLpWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdtWethLpABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtWethLpABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareBscLpUsdtWethLpApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdtWethLpABI, "approve">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtWethLpABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareBscLpUsdtWethLpDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof bscLpUsdtWethLpABI,
      "decreaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtWethLpABI, "decreaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareBscLpUsdtWethLpIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof bscLpUsdtWethLpABI,
      "increaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtWethLpABI, "increaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareBscLpUsdtWethLpInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdtWethLpABI, "initialize">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    functionName: "initialize",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtWethLpABI, "initialize">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareBscLpUsdtWethLpMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdtWethLpABI, "mint">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtWethLpABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareBscLpUsdtWethLpTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdtWethLpABI, "transfer">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtWethLpABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareBscLpUsdtWethLpTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdtWethLpABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdtWethLpABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__.
 */
export function useBscLpUsdtWethLpEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof bscLpUsdtWethLpABI, TEventName>,
    "abi" | "address"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    ...config,
  } as UseContractEventConfig<typeof bscLpUsdtWethLpABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `eventName` set to `"Approval"`.
 */
export function useBscLpUsdtWethLpApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof bscLpUsdtWethLpABI, "Approval">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof bscLpUsdtWethLpABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `eventName` set to `"Initialized"`.
 */
export function useBscLpUsdtWethLpInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof bscLpUsdtWethLpABI, "Initialized">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    eventName: "Initialized",
    ...config,
  } as UseContractEventConfig<typeof bscLpUsdtWethLpABI, "Initialized">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpUsdtWethLpABI}__ and `eventName` set to `"Transfer"`.
 */
export function useBscLpUsdtWethLpTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof bscLpUsdtWethLpABI, "Transfer">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpUsdtWethLpABI,
    address: bscLpUsdtWethLpAddress,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof bscLpUsdtWethLpABI, "Transfer">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__.
 */
export function useBscLpUsdcWethLpRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof bscLpUsdcWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdcWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdcWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `functionName` set to `"allowance"`.
 */
export function useBscLpUsdcWethLpAllowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof bscLpUsdcWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdcWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdcWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useBscLpUsdcWethLpBalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof bscLpUsdcWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdcWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdcWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `functionName` set to `"decimals"`.
 */
export function useBscLpUsdcWethLpDecimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof bscLpUsdcWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdcWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdcWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `functionName` set to `"name"`.
 */
export function useBscLpUsdcWethLpName<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof bscLpUsdcWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdcWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdcWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `functionName` set to `"symbol"`.
 */
export function useBscLpUsdcWethLpSymbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof bscLpUsdcWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdcWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdcWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useBscLpUsdcWethLpTotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof bscLpUsdcWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdcWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdcWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__.
 */
export function useBscLpUsdcWethLpWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdcWethLpABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<
        typeof bscLpUsdcWethLpABI,
        TFunctionName,
        TMode
      > & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdcWethLpABI, TFunctionName, TMode>({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `functionName` set to `"approve"`.
 */
export function useBscLpUsdcWethLpApprove<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdcWethLpABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof bscLpUsdcWethLpABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdcWethLpABI, "approve", TMode>({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useBscLpUsdcWethLpDecreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdcWethLpABI,
          "decreaseAllowance"
        >["request"]["abi"],
        "decreaseAllowance",
        TMode
      > & { functionName?: "decreaseAllowance" }
    : UseContractWriteConfig<
        typeof bscLpUsdcWethLpABI,
        "decreaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "decreaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof bscLpUsdcWethLpABI,
    "decreaseAllowance",
    TMode
  >({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useBscLpUsdcWethLpIncreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdcWethLpABI,
          "increaseAllowance"
        >["request"]["abi"],
        "increaseAllowance",
        TMode
      > & { functionName?: "increaseAllowance" }
    : UseContractWriteConfig<
        typeof bscLpUsdcWethLpABI,
        "increaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "increaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof bscLpUsdcWethLpABI,
    "increaseAllowance",
    TMode
  >({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `functionName` set to `"initialize"`.
 */
export function useBscLpUsdcWethLpInitialize<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdcWethLpABI,
          "initialize"
        >["request"]["abi"],
        "initialize",
        TMode
      > & { functionName?: "initialize" }
    : UseContractWriteConfig<typeof bscLpUsdcWethLpABI, "initialize", TMode> & {
        abi?: never;
        functionName?: "initialize";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdcWethLpABI, "initialize", TMode>({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    functionName: "initialize",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `functionName` set to `"mint"`.
 */
export function useBscLpUsdcWethLpMint<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdcWethLpABI,
          "mint"
        >["request"]["abi"],
        "mint",
        TMode
      > & { functionName?: "mint" }
    : UseContractWriteConfig<typeof bscLpUsdcWethLpABI, "mint", TMode> & {
        abi?: never;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdcWethLpABI, "mint", TMode>({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `functionName` set to `"transfer"`.
 */
export function useBscLpUsdcWethLpTransfer<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdcWethLpABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof bscLpUsdcWethLpABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdcWethLpABI, "transfer", TMode>({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useBscLpUsdcWethLpTransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdcWethLpABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<
        typeof bscLpUsdcWethLpABI,
        "transferFrom",
        TMode
      > & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdcWethLpABI, "transferFrom", TMode>({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__.
 */
export function usePrepareBscLpUsdcWethLpWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdcWethLpABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdcWethLpABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareBscLpUsdcWethLpApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdcWethLpABI, "approve">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdcWethLpABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareBscLpUsdcWethLpDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof bscLpUsdcWethLpABI,
      "decreaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdcWethLpABI, "decreaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareBscLpUsdcWethLpIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof bscLpUsdcWethLpABI,
      "increaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdcWethLpABI, "increaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareBscLpUsdcWethLpInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdcWethLpABI, "initialize">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    functionName: "initialize",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdcWethLpABI, "initialize">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareBscLpUsdcWethLpMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdcWethLpABI, "mint">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdcWethLpABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareBscLpUsdcWethLpTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdcWethLpABI, "transfer">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdcWethLpABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareBscLpUsdcWethLpTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdcWethLpABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdcWethLpABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__.
 */
export function useBscLpUsdcWethLpEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof bscLpUsdcWethLpABI, TEventName>,
    "abi" | "address"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    ...config,
  } as UseContractEventConfig<typeof bscLpUsdcWethLpABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `eventName` set to `"Approval"`.
 */
export function useBscLpUsdcWethLpApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof bscLpUsdcWethLpABI, "Approval">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof bscLpUsdcWethLpABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `eventName` set to `"Initialized"`.
 */
export function useBscLpUsdcWethLpInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof bscLpUsdcWethLpABI, "Initialized">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    eventName: "Initialized",
    ...config,
  } as UseContractEventConfig<typeof bscLpUsdcWethLpABI, "Initialized">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpUsdcWethLpABI}__ and `eventName` set to `"Transfer"`.
 */
export function useBscLpUsdcWethLpTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof bscLpUsdcWethLpABI, "Transfer">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpUsdcWethLpABI,
    address: bscLpUsdcWethLpAddress,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof bscLpUsdcWethLpABI, "Transfer">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__.
 */
export function useBscLpUsdcMaticLpRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof bscLpUsdcMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdcMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdcMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `functionName` set to `"allowance"`.
 */
export function useBscLpUsdcMaticLpAllowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof bscLpUsdcMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdcMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdcMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useBscLpUsdcMaticLpBalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof bscLpUsdcMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdcMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdcMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `functionName` set to `"decimals"`.
 */
export function useBscLpUsdcMaticLpDecimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof bscLpUsdcMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdcMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdcMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `functionName` set to `"name"`.
 */
export function useBscLpUsdcMaticLpName<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof bscLpUsdcMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdcMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdcMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `functionName` set to `"symbol"`.
 */
export function useBscLpUsdcMaticLpSymbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof bscLpUsdcMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdcMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdcMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useBscLpUsdcMaticLpTotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof bscLpUsdcMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpUsdcMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof bscLpUsdcMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__.
 */
export function useBscLpUsdcMaticLpWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdcMaticLpABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<
        typeof bscLpUsdcMaticLpABI,
        TFunctionName,
        TMode
      > & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdcMaticLpABI, TFunctionName, TMode>({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `functionName` set to `"approve"`.
 */
export function useBscLpUsdcMaticLpApprove<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdcMaticLpABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof bscLpUsdcMaticLpABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdcMaticLpABI, "approve", TMode>({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useBscLpUsdcMaticLpDecreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdcMaticLpABI,
          "decreaseAllowance"
        >["request"]["abi"],
        "decreaseAllowance",
        TMode
      > & { functionName?: "decreaseAllowance" }
    : UseContractWriteConfig<
        typeof bscLpUsdcMaticLpABI,
        "decreaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "decreaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof bscLpUsdcMaticLpABI,
    "decreaseAllowance",
    TMode
  >({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useBscLpUsdcMaticLpIncreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdcMaticLpABI,
          "increaseAllowance"
        >["request"]["abi"],
        "increaseAllowance",
        TMode
      > & { functionName?: "increaseAllowance" }
    : UseContractWriteConfig<
        typeof bscLpUsdcMaticLpABI,
        "increaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "increaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof bscLpUsdcMaticLpABI,
    "increaseAllowance",
    TMode
  >({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `functionName` set to `"initialize"`.
 */
export function useBscLpUsdcMaticLpInitialize<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdcMaticLpABI,
          "initialize"
        >["request"]["abi"],
        "initialize",
        TMode
      > & { functionName?: "initialize" }
    : UseContractWriteConfig<
        typeof bscLpUsdcMaticLpABI,
        "initialize",
        TMode
      > & {
        abi?: never;
        functionName?: "initialize";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdcMaticLpABI, "initialize", TMode>({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    functionName: "initialize",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `functionName` set to `"mint"`.
 */
export function useBscLpUsdcMaticLpMint<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdcMaticLpABI,
          "mint"
        >["request"]["abi"],
        "mint",
        TMode
      > & { functionName?: "mint" }
    : UseContractWriteConfig<typeof bscLpUsdcMaticLpABI, "mint", TMode> & {
        abi?: never;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdcMaticLpABI, "mint", TMode>({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `functionName` set to `"transfer"`.
 */
export function useBscLpUsdcMaticLpTransfer<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdcMaticLpABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof bscLpUsdcMaticLpABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdcMaticLpABI, "transfer", TMode>({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useBscLpUsdcMaticLpTransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpUsdcMaticLpABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<
        typeof bscLpUsdcMaticLpABI,
        "transferFrom",
        TMode
      > & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof bscLpUsdcMaticLpABI, "transferFrom", TMode>({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__.
 */
export function usePrepareBscLpUsdcMaticLpWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdcMaticLpABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdcMaticLpABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareBscLpUsdcMaticLpApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdcMaticLpABI, "approve">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdcMaticLpABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareBscLpUsdcMaticLpDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof bscLpUsdcMaticLpABI,
      "decreaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdcMaticLpABI, "decreaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareBscLpUsdcMaticLpIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof bscLpUsdcMaticLpABI,
      "increaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdcMaticLpABI, "increaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareBscLpUsdcMaticLpInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdcMaticLpABI, "initialize">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    functionName: "initialize",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdcMaticLpABI, "initialize">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareBscLpUsdcMaticLpMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdcMaticLpABI, "mint">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdcMaticLpABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareBscLpUsdcMaticLpTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdcMaticLpABI, "transfer">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdcMaticLpABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareBscLpUsdcMaticLpTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpUsdcMaticLpABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpUsdcMaticLpABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__.
 */
export function useBscLpUsdcMaticLpEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof bscLpUsdcMaticLpABI, TEventName>,
    "abi" | "address"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    ...config,
  } as UseContractEventConfig<typeof bscLpUsdcMaticLpABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `eventName` set to `"Approval"`.
 */
export function useBscLpUsdcMaticLpApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof bscLpUsdcMaticLpABI, "Approval">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof bscLpUsdcMaticLpABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `eventName` set to `"Initialized"`.
 */
export function useBscLpUsdcMaticLpInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof bscLpUsdcMaticLpABI, "Initialized">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    eventName: "Initialized",
    ...config,
  } as UseContractEventConfig<typeof bscLpUsdcMaticLpABI, "Initialized">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpUsdcMaticLpABI}__ and `eventName` set to `"Transfer"`.
 */
export function useBscLpUsdcMaticLpTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof bscLpUsdcMaticLpABI, "Transfer">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpUsdcMaticLpABI,
    address: bscLpUsdcMaticLpAddress,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof bscLpUsdcMaticLpABI, "Transfer">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpWethMaticLpABI}__.
 */
export function useBscLpWethMaticLpRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof bscLpWethMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpWethMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    ...config,
  } as UseContractReadConfig<typeof bscLpWethMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `functionName` set to `"allowance"`.
 */
export function useBscLpWethMaticLpAllowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof bscLpWethMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpWethMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof bscLpWethMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useBscLpWethMaticLpBalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof bscLpWethMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpWethMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof bscLpWethMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `functionName` set to `"decimals"`.
 */
export function useBscLpWethMaticLpDecimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof bscLpWethMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpWethMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof bscLpWethMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `functionName` set to `"name"`.
 */
export function useBscLpWethMaticLpName<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof bscLpWethMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpWethMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof bscLpWethMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `functionName` set to `"symbol"`.
 */
export function useBscLpWethMaticLpSymbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof bscLpWethMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpWethMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof bscLpWethMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useBscLpWethMaticLpTotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof bscLpWethMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof bscLpWethMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof bscLpWethMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpWethMaticLpABI}__.
 */
export function useBscLpWethMaticLpWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpWethMaticLpABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<
        typeof bscLpWethMaticLpABI,
        TFunctionName,
        TMode
      > & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof bscLpWethMaticLpABI, TFunctionName, TMode>({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `functionName` set to `"approve"`.
 */
export function useBscLpWethMaticLpApprove<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpWethMaticLpABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof bscLpWethMaticLpABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof bscLpWethMaticLpABI, "approve", TMode>({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useBscLpWethMaticLpDecreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpWethMaticLpABI,
          "decreaseAllowance"
        >["request"]["abi"],
        "decreaseAllowance",
        TMode
      > & { functionName?: "decreaseAllowance" }
    : UseContractWriteConfig<
        typeof bscLpWethMaticLpABI,
        "decreaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "decreaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof bscLpWethMaticLpABI,
    "decreaseAllowance",
    TMode
  >({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useBscLpWethMaticLpIncreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpWethMaticLpABI,
          "increaseAllowance"
        >["request"]["abi"],
        "increaseAllowance",
        TMode
      > & { functionName?: "increaseAllowance" }
    : UseContractWriteConfig<
        typeof bscLpWethMaticLpABI,
        "increaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "increaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof bscLpWethMaticLpABI,
    "increaseAllowance",
    TMode
  >({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `functionName` set to `"initialize"`.
 */
export function useBscLpWethMaticLpInitialize<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpWethMaticLpABI,
          "initialize"
        >["request"]["abi"],
        "initialize",
        TMode
      > & { functionName?: "initialize" }
    : UseContractWriteConfig<
        typeof bscLpWethMaticLpABI,
        "initialize",
        TMode
      > & {
        abi?: never;
        functionName?: "initialize";
      } = {} as any
) {
  return useContractWrite<typeof bscLpWethMaticLpABI, "initialize", TMode>({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    functionName: "initialize",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `functionName` set to `"mint"`.
 */
export function useBscLpWethMaticLpMint<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpWethMaticLpABI,
          "mint"
        >["request"]["abi"],
        "mint",
        TMode
      > & { functionName?: "mint" }
    : UseContractWriteConfig<typeof bscLpWethMaticLpABI, "mint", TMode> & {
        abi?: never;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<typeof bscLpWethMaticLpABI, "mint", TMode>({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `functionName` set to `"transfer"`.
 */
export function useBscLpWethMaticLpTransfer<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpWethMaticLpABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof bscLpWethMaticLpABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof bscLpWethMaticLpABI, "transfer", TMode>({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useBscLpWethMaticLpTransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof bscLpWethMaticLpABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<
        typeof bscLpWethMaticLpABI,
        "transferFrom",
        TMode
      > & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof bscLpWethMaticLpABI, "transferFrom", TMode>({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpWethMaticLpABI}__.
 */
export function usePrepareBscLpWethMaticLpWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpWethMaticLpABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpWethMaticLpABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareBscLpWethMaticLpApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpWethMaticLpABI, "approve">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpWethMaticLpABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareBscLpWethMaticLpDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof bscLpWethMaticLpABI,
      "decreaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpWethMaticLpABI, "decreaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareBscLpWethMaticLpIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof bscLpWethMaticLpABI,
      "increaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpWethMaticLpABI, "increaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareBscLpWethMaticLpInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpWethMaticLpABI, "initialize">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    functionName: "initialize",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpWethMaticLpABI, "initialize">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareBscLpWethMaticLpMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpWethMaticLpABI, "mint">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpWethMaticLpABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareBscLpWethMaticLpTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpWethMaticLpABI, "transfer">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpWethMaticLpABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareBscLpWethMaticLpTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof bscLpWethMaticLpABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof bscLpWethMaticLpABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpWethMaticLpABI}__.
 */
export function useBscLpWethMaticLpEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof bscLpWethMaticLpABI, TEventName>,
    "abi" | "address"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    ...config,
  } as UseContractEventConfig<typeof bscLpWethMaticLpABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `eventName` set to `"Approval"`.
 */
export function useBscLpWethMaticLpApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof bscLpWethMaticLpABI, "Approval">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof bscLpWethMaticLpABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `eventName` set to `"Initialized"`.
 */
export function useBscLpWethMaticLpInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof bscLpWethMaticLpABI, "Initialized">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    eventName: "Initialized",
    ...config,
  } as UseContractEventConfig<typeof bscLpWethMaticLpABI, "Initialized">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link bscLpWethMaticLpABI}__ and `eventName` set to `"Transfer"`.
 */
export function useBscLpWethMaticLpTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof bscLpWethMaticLpABI, "Transfer">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: bscLpWethMaticLpABI,
    address: bscLpWethMaticLpAddress,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof bscLpWethMaticLpABI, "Transfer">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link dexAggregatorMumbaiABI}__.
 */
export function useDexAggregatorMumbaiRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof dexAggregatorMumbaiABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof dexAggregatorMumbaiABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: dexAggregatorMumbaiABI,
    address: dexAggregatorMumbaiAddress,
    ...config,
  } as UseContractReadConfig<typeof dexAggregatorMumbaiABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link dexAggregatorMumbaiABI}__ and `functionName` set to `"WETH"`.
 */
export function useDexAggregatorMumbaiWeth<
  TFunctionName extends "WETH",
  TSelectData = ReadContractResult<typeof dexAggregatorMumbaiABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof dexAggregatorMumbaiABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: dexAggregatorMumbaiABI,
    address: dexAggregatorMumbaiAddress,
    functionName: "WETH",
    ...config,
  } as UseContractReadConfig<typeof dexAggregatorMumbaiABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link dexAggregatorMumbaiABI}__.
 */
export function useDexAggregatorMumbaiWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof dexAggregatorMumbaiABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<
        typeof dexAggregatorMumbaiABI,
        TFunctionName,
        TMode
      > & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof dexAggregatorMumbaiABI, TFunctionName, TMode>({
    abi: dexAggregatorMumbaiABI,
    address: dexAggregatorMumbaiAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link dexAggregatorMumbaiABI}__ and `functionName` set to `"swap"`.
 */
export function useDexAggregatorMumbaiSwap<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof dexAggregatorMumbaiABI,
          "swap"
        >["request"]["abi"],
        "swap",
        TMode
      > & { functionName?: "swap" }
    : UseContractWriteConfig<typeof dexAggregatorMumbaiABI, "swap", TMode> & {
        abi?: never;
        functionName?: "swap";
      } = {} as any
) {
  return useContractWrite<typeof dexAggregatorMumbaiABI, "swap", TMode>({
    abi: dexAggregatorMumbaiABI,
    address: dexAggregatorMumbaiAddress,
    functionName: "swap",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link dexAggregatorMumbaiABI}__.
 */
export function usePrepareDexAggregatorMumbaiWrite<
  TFunctionName extends string
>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof dexAggregatorMumbaiABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: dexAggregatorMumbaiABI,
    address: dexAggregatorMumbaiAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof dexAggregatorMumbaiABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link dexAggregatorMumbaiABI}__ and `functionName` set to `"swap"`.
 */
export function usePrepareDexAggregatorMumbaiSwap(
  config: Omit<
    UsePrepareContractWriteConfig<typeof dexAggregatorMumbaiABI, "swap">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: dexAggregatorMumbaiABI,
    address: dexAggregatorMumbaiAddress,
    functionName: "swap",
    ...config,
  } as UsePrepareContractWriteConfig<typeof dexAggregatorMumbaiABI, "swap">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__.
 */
export function useMumbaiUsdtTokenRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof mumbaiUsdtTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `functionName` set to `"allowance"`.
 */
export function useMumbaiUsdtTokenAllowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof mumbaiUsdtTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useMumbaiUsdtTokenBalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof mumbaiUsdtTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `functionName` set to `"decimals"`.
 */
export function useMumbaiUsdtTokenDecimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof mumbaiUsdtTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `functionName` set to `"name"`.
 */
export function useMumbaiUsdtTokenName<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof mumbaiUsdtTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `functionName` set to `"symbol"`.
 */
export function useMumbaiUsdtTokenSymbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof mumbaiUsdtTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useMumbaiUsdtTokenTotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof mumbaiUsdtTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__.
 */
export function useMumbaiUsdtTokenWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtTokenABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<
        typeof mumbaiUsdtTokenABI,
        TFunctionName,
        TMode
      > & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtTokenABI, TFunctionName, TMode>({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `functionName` set to `"approve"`.
 */
export function useMumbaiUsdtTokenApprove<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtTokenABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof mumbaiUsdtTokenABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtTokenABI, "approve", TMode>({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useMumbaiUsdtTokenDecreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtTokenABI,
          "decreaseAllowance"
        >["request"]["abi"],
        "decreaseAllowance",
        TMode
      > & { functionName?: "decreaseAllowance" }
    : UseContractWriteConfig<
        typeof mumbaiUsdtTokenABI,
        "decreaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "decreaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof mumbaiUsdtTokenABI,
    "decreaseAllowance",
    TMode
  >({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useMumbaiUsdtTokenIncreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtTokenABI,
          "increaseAllowance"
        >["request"]["abi"],
        "increaseAllowance",
        TMode
      > & { functionName?: "increaseAllowance" }
    : UseContractWriteConfig<
        typeof mumbaiUsdtTokenABI,
        "increaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "increaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof mumbaiUsdtTokenABI,
    "increaseAllowance",
    TMode
  >({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    functionName: "increaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `functionName` set to `"initialize"`.
 */
export function useMumbaiUsdtTokenInitialize<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtTokenABI,
          "initialize"
        >["request"]["abi"],
        "initialize",
        TMode
      > & { functionName?: "initialize" }
    : UseContractWriteConfig<typeof mumbaiUsdtTokenABI, "initialize", TMode> & {
        abi?: never;
        functionName?: "initialize";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtTokenABI, "initialize", TMode>({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    functionName: "initialize",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `functionName` set to `"mint"`.
 */
export function useMumbaiUsdtTokenMint<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtTokenABI,
          "mint"
        >["request"]["abi"],
        "mint",
        TMode
      > & { functionName?: "mint" }
    : UseContractWriteConfig<typeof mumbaiUsdtTokenABI, "mint", TMode> & {
        abi?: never;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtTokenABI, "mint", TMode>({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `functionName` set to `"transfer"`.
 */
export function useMumbaiUsdtTokenTransfer<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtTokenABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof mumbaiUsdtTokenABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtTokenABI, "transfer", TMode>({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useMumbaiUsdtTokenTransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtTokenABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<
        typeof mumbaiUsdtTokenABI,
        "transferFrom",
        TMode
      > & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtTokenABI, "transferFrom", TMode>({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__.
 */
export function usePrepareMumbaiUsdtTokenWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtTokenABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtTokenABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareMumbaiUsdtTokenApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtTokenABI, "approve">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtTokenABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareMumbaiUsdtTokenDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof mumbaiUsdtTokenABI,
      "decreaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtTokenABI, "decreaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareMumbaiUsdtTokenIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof mumbaiUsdtTokenABI,
      "increaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    functionName: "increaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtTokenABI, "increaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareMumbaiUsdtTokenInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtTokenABI, "initialize">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    functionName: "initialize",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtTokenABI, "initialize">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareMumbaiUsdtTokenMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtTokenABI, "mint">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtTokenABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareMumbaiUsdtTokenTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtTokenABI, "transfer">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtTokenABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareMumbaiUsdtTokenTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtTokenABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtTokenABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__.
 */
export function useMumbaiUsdtTokenEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdtTokenABI, TEventName>,
    "abi" | "address"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdtTokenABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `eventName` set to `"Approval"`.
 */
export function useMumbaiUsdtTokenApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdtTokenABI, "Approval">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdtTokenABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `eventName` set to `"Initialized"`.
 */
export function useMumbaiUsdtTokenInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdtTokenABI, "Initialized">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    eventName: "Initialized",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdtTokenABI, "Initialized">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdtTokenABI}__ and `eventName` set to `"Transfer"`.
 */
export function useMumbaiUsdtTokenTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdtTokenABI, "Transfer">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdtTokenABI,
    address: mumbaiUsdtTokenAddress,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdtTokenABI, "Transfer">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__.
 */
export function useMumbaiUsdcTokenRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof mumbaiUsdcTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `functionName` set to `"allowance"`.
 */
export function useMumbaiUsdcTokenAllowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof mumbaiUsdcTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useMumbaiUsdcTokenBalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof mumbaiUsdcTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `functionName` set to `"decimals"`.
 */
export function useMumbaiUsdcTokenDecimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof mumbaiUsdcTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `functionName` set to `"name"`.
 */
export function useMumbaiUsdcTokenName<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof mumbaiUsdcTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `functionName` set to `"symbol"`.
 */
export function useMumbaiUsdcTokenSymbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof mumbaiUsdcTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useMumbaiUsdcTokenTotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof mumbaiUsdcTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__.
 */
export function useMumbaiUsdcTokenWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcTokenABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<
        typeof mumbaiUsdcTokenABI,
        TFunctionName,
        TMode
      > & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdcTokenABI, TFunctionName, TMode>({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `functionName` set to `"approve"`.
 */
export function useMumbaiUsdcTokenApprove<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcTokenABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof mumbaiUsdcTokenABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdcTokenABI, "approve", TMode>({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useMumbaiUsdcTokenDecreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcTokenABI,
          "decreaseAllowance"
        >["request"]["abi"],
        "decreaseAllowance",
        TMode
      > & { functionName?: "decreaseAllowance" }
    : UseContractWriteConfig<
        typeof mumbaiUsdcTokenABI,
        "decreaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "decreaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof mumbaiUsdcTokenABI,
    "decreaseAllowance",
    TMode
  >({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useMumbaiUsdcTokenIncreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcTokenABI,
          "increaseAllowance"
        >["request"]["abi"],
        "increaseAllowance",
        TMode
      > & { functionName?: "increaseAllowance" }
    : UseContractWriteConfig<
        typeof mumbaiUsdcTokenABI,
        "increaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "increaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof mumbaiUsdcTokenABI,
    "increaseAllowance",
    TMode
  >({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    functionName: "increaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `functionName` set to `"initialize"`.
 */
export function useMumbaiUsdcTokenInitialize<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcTokenABI,
          "initialize"
        >["request"]["abi"],
        "initialize",
        TMode
      > & { functionName?: "initialize" }
    : UseContractWriteConfig<typeof mumbaiUsdcTokenABI, "initialize", TMode> & {
        abi?: never;
        functionName?: "initialize";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdcTokenABI, "initialize", TMode>({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    functionName: "initialize",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `functionName` set to `"mint"`.
 */
export function useMumbaiUsdcTokenMint<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcTokenABI,
          "mint"
        >["request"]["abi"],
        "mint",
        TMode
      > & { functionName?: "mint" }
    : UseContractWriteConfig<typeof mumbaiUsdcTokenABI, "mint", TMode> & {
        abi?: never;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdcTokenABI, "mint", TMode>({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `functionName` set to `"transfer"`.
 */
export function useMumbaiUsdcTokenTransfer<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcTokenABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof mumbaiUsdcTokenABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdcTokenABI, "transfer", TMode>({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useMumbaiUsdcTokenTransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcTokenABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<
        typeof mumbaiUsdcTokenABI,
        "transferFrom",
        TMode
      > & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdcTokenABI, "transferFrom", TMode>({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__.
 */
export function usePrepareMumbaiUsdcTokenWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdcTokenABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcTokenABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareMumbaiUsdcTokenApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdcTokenABI, "approve">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcTokenABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareMumbaiUsdcTokenDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof mumbaiUsdcTokenABI,
      "decreaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcTokenABI, "decreaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareMumbaiUsdcTokenIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof mumbaiUsdcTokenABI,
      "increaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    functionName: "increaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcTokenABI, "increaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareMumbaiUsdcTokenInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdcTokenABI, "initialize">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    functionName: "initialize",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcTokenABI, "initialize">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareMumbaiUsdcTokenMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdcTokenABI, "mint">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcTokenABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareMumbaiUsdcTokenTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdcTokenABI, "transfer">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcTokenABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareMumbaiUsdcTokenTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdcTokenABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcTokenABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__.
 */
export function useMumbaiUsdcTokenEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdcTokenABI, TEventName>,
    "abi" | "address"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdcTokenABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `eventName` set to `"Approval"`.
 */
export function useMumbaiUsdcTokenApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdcTokenABI, "Approval">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdcTokenABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `eventName` set to `"Initialized"`.
 */
export function useMumbaiUsdcTokenInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdcTokenABI, "Initialized">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    eventName: "Initialized",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdcTokenABI, "Initialized">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdcTokenABI}__ and `eventName` set to `"Transfer"`.
 */
export function useMumbaiUsdcTokenTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdcTokenABI, "Transfer">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdcTokenABI,
    address: mumbaiUsdcTokenAddress,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdcTokenABI, "Transfer">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiWethTokenABI}__.
 */
export function useMumbaiWethTokenRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof mumbaiWethTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiWethTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    ...config,
  } as UseContractReadConfig<typeof mumbaiWethTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `functionName` set to `"allowance"`.
 */
export function useMumbaiWethTokenAllowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof mumbaiWethTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiWethTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof mumbaiWethTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useMumbaiWethTokenBalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof mumbaiWethTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiWethTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof mumbaiWethTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `functionName` set to `"decimals"`.
 */
export function useMumbaiWethTokenDecimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof mumbaiWethTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiWethTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof mumbaiWethTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `functionName` set to `"name"`.
 */
export function useMumbaiWethTokenName<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof mumbaiWethTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiWethTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof mumbaiWethTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `functionName` set to `"symbol"`.
 */
export function useMumbaiWethTokenSymbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof mumbaiWethTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiWethTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof mumbaiWethTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useMumbaiWethTokenTotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof mumbaiWethTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiWethTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof mumbaiWethTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiWethTokenABI}__.
 */
export function useMumbaiWethTokenWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiWethTokenABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<
        typeof mumbaiWethTokenABI,
        TFunctionName,
        TMode
      > & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof mumbaiWethTokenABI, TFunctionName, TMode>({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `functionName` set to `"approve"`.
 */
export function useMumbaiWethTokenApprove<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiWethTokenABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof mumbaiWethTokenABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiWethTokenABI, "approve", TMode>({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useMumbaiWethTokenDecreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiWethTokenABI,
          "decreaseAllowance"
        >["request"]["abi"],
        "decreaseAllowance",
        TMode
      > & { functionName?: "decreaseAllowance" }
    : UseContractWriteConfig<
        typeof mumbaiWethTokenABI,
        "decreaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "decreaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof mumbaiWethTokenABI,
    "decreaseAllowance",
    TMode
  >({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useMumbaiWethTokenIncreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiWethTokenABI,
          "increaseAllowance"
        >["request"]["abi"],
        "increaseAllowance",
        TMode
      > & { functionName?: "increaseAllowance" }
    : UseContractWriteConfig<
        typeof mumbaiWethTokenABI,
        "increaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "increaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof mumbaiWethTokenABI,
    "increaseAllowance",
    TMode
  >({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    functionName: "increaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `functionName` set to `"initialize"`.
 */
export function useMumbaiWethTokenInitialize<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiWethTokenABI,
          "initialize"
        >["request"]["abi"],
        "initialize",
        TMode
      > & { functionName?: "initialize" }
    : UseContractWriteConfig<typeof mumbaiWethTokenABI, "initialize", TMode> & {
        abi?: never;
        functionName?: "initialize";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiWethTokenABI, "initialize", TMode>({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    functionName: "initialize",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `functionName` set to `"mint"`.
 */
export function useMumbaiWethTokenMint<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiWethTokenABI,
          "mint"
        >["request"]["abi"],
        "mint",
        TMode
      > & { functionName?: "mint" }
    : UseContractWriteConfig<typeof mumbaiWethTokenABI, "mint", TMode> & {
        abi?: never;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiWethTokenABI, "mint", TMode>({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `functionName` set to `"transfer"`.
 */
export function useMumbaiWethTokenTransfer<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiWethTokenABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof mumbaiWethTokenABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiWethTokenABI, "transfer", TMode>({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useMumbaiWethTokenTransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiWethTokenABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<
        typeof mumbaiWethTokenABI,
        "transferFrom",
        TMode
      > & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiWethTokenABI, "transferFrom", TMode>({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiWethTokenABI}__.
 */
export function usePrepareMumbaiWethTokenWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiWethTokenABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiWethTokenABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareMumbaiWethTokenApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiWethTokenABI, "approve">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiWethTokenABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareMumbaiWethTokenDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof mumbaiWethTokenABI,
      "decreaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiWethTokenABI, "decreaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareMumbaiWethTokenIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof mumbaiWethTokenABI,
      "increaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    functionName: "increaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiWethTokenABI, "increaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareMumbaiWethTokenInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiWethTokenABI, "initialize">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    functionName: "initialize",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiWethTokenABI, "initialize">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareMumbaiWethTokenMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiWethTokenABI, "mint">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiWethTokenABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareMumbaiWethTokenTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiWethTokenABI, "transfer">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiWethTokenABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareMumbaiWethTokenTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiWethTokenABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiWethTokenABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiWethTokenABI}__.
 */
export function useMumbaiWethTokenEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof mumbaiWethTokenABI, TEventName>,
    "abi" | "address"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    ...config,
  } as UseContractEventConfig<typeof mumbaiWethTokenABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `eventName` set to `"Approval"`.
 */
export function useMumbaiWethTokenApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiWethTokenABI, "Approval">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof mumbaiWethTokenABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `eventName` set to `"Initialized"`.
 */
export function useMumbaiWethTokenInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiWethTokenABI, "Initialized">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    eventName: "Initialized",
    ...config,
  } as UseContractEventConfig<typeof mumbaiWethTokenABI, "Initialized">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiWethTokenABI}__ and `eventName` set to `"Transfer"`.
 */
export function useMumbaiWethTokenTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiWethTokenABI, "Transfer">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiWethTokenABI,
    address: mumbaiWethTokenAddress,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof mumbaiWethTokenABI, "Transfer">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiMaticTokenABI}__.
 */
export function useMumbaiMaticTokenRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof mumbaiMaticTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiMaticTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    ...config,
  } as UseContractReadConfig<typeof mumbaiMaticTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `functionName` set to `"allowance"`.
 */
export function useMumbaiMaticTokenAllowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof mumbaiMaticTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiMaticTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof mumbaiMaticTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useMumbaiMaticTokenBalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof mumbaiMaticTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiMaticTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof mumbaiMaticTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `functionName` set to `"decimals"`.
 */
export function useMumbaiMaticTokenDecimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof mumbaiMaticTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiMaticTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof mumbaiMaticTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `functionName` set to `"name"`.
 */
export function useMumbaiMaticTokenName<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof mumbaiMaticTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiMaticTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof mumbaiMaticTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `functionName` set to `"symbol"`.
 */
export function useMumbaiMaticTokenSymbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof mumbaiMaticTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiMaticTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof mumbaiMaticTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useMumbaiMaticTokenTotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof mumbaiMaticTokenABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiMaticTokenABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof mumbaiMaticTokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiMaticTokenABI}__.
 */
export function useMumbaiMaticTokenWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiMaticTokenABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<
        typeof mumbaiMaticTokenABI,
        TFunctionName,
        TMode
      > & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof mumbaiMaticTokenABI, TFunctionName, TMode>({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `functionName` set to `"approve"`.
 */
export function useMumbaiMaticTokenApprove<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiMaticTokenABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof mumbaiMaticTokenABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiMaticTokenABI, "approve", TMode>({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useMumbaiMaticTokenDecreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiMaticTokenABI,
          "decreaseAllowance"
        >["request"]["abi"],
        "decreaseAllowance",
        TMode
      > & { functionName?: "decreaseAllowance" }
    : UseContractWriteConfig<
        typeof mumbaiMaticTokenABI,
        "decreaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "decreaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof mumbaiMaticTokenABI,
    "decreaseAllowance",
    TMode
  >({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useMumbaiMaticTokenIncreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiMaticTokenABI,
          "increaseAllowance"
        >["request"]["abi"],
        "increaseAllowance",
        TMode
      > & { functionName?: "increaseAllowance" }
    : UseContractWriteConfig<
        typeof mumbaiMaticTokenABI,
        "increaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "increaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof mumbaiMaticTokenABI,
    "increaseAllowance",
    TMode
  >({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    functionName: "increaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `functionName` set to `"initialize"`.
 */
export function useMumbaiMaticTokenInitialize<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiMaticTokenABI,
          "initialize"
        >["request"]["abi"],
        "initialize",
        TMode
      > & { functionName?: "initialize" }
    : UseContractWriteConfig<
        typeof mumbaiMaticTokenABI,
        "initialize",
        TMode
      > & {
        abi?: never;
        functionName?: "initialize";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiMaticTokenABI, "initialize", TMode>({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    functionName: "initialize",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `functionName` set to `"mint"`.
 */
export function useMumbaiMaticTokenMint<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiMaticTokenABI,
          "mint"
        >["request"]["abi"],
        "mint",
        TMode
      > & { functionName?: "mint" }
    : UseContractWriteConfig<typeof mumbaiMaticTokenABI, "mint", TMode> & {
        abi?: never;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiMaticTokenABI, "mint", TMode>({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `functionName` set to `"transfer"`.
 */
export function useMumbaiMaticTokenTransfer<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiMaticTokenABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof mumbaiMaticTokenABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiMaticTokenABI, "transfer", TMode>({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useMumbaiMaticTokenTransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiMaticTokenABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<
        typeof mumbaiMaticTokenABI,
        "transferFrom",
        TMode
      > & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiMaticTokenABI, "transferFrom", TMode>({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiMaticTokenABI}__.
 */
export function usePrepareMumbaiMaticTokenWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiMaticTokenABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiMaticTokenABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareMumbaiMaticTokenApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiMaticTokenABI, "approve">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiMaticTokenABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareMumbaiMaticTokenDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof mumbaiMaticTokenABI,
      "decreaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiMaticTokenABI, "decreaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareMumbaiMaticTokenIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof mumbaiMaticTokenABI,
      "increaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    functionName: "increaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiMaticTokenABI, "increaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareMumbaiMaticTokenInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiMaticTokenABI, "initialize">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    functionName: "initialize",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiMaticTokenABI, "initialize">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareMumbaiMaticTokenMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiMaticTokenABI, "mint">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiMaticTokenABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareMumbaiMaticTokenTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiMaticTokenABI, "transfer">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiMaticTokenABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareMumbaiMaticTokenTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiMaticTokenABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiMaticTokenABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiMaticTokenABI}__.
 */
export function useMumbaiMaticTokenEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof mumbaiMaticTokenABI, TEventName>,
    "abi" | "address"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    ...config,
  } as UseContractEventConfig<typeof mumbaiMaticTokenABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `eventName` set to `"Approval"`.
 */
export function useMumbaiMaticTokenApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiMaticTokenABI, "Approval">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof mumbaiMaticTokenABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `eventName` set to `"Initialized"`.
 */
export function useMumbaiMaticTokenInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiMaticTokenABI, "Initialized">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    eventName: "Initialized",
    ...config,
  } as UseContractEventConfig<typeof mumbaiMaticTokenABI, "Initialized">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiMaticTokenABI}__ and `eventName` set to `"Transfer"`.
 */
export function useMumbaiMaticTokenTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiMaticTokenABI, "Transfer">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiMaticTokenABI,
    address: mumbaiMaticTokenAddress,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof mumbaiMaticTokenABI, "Transfer">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__.
 */
export function useMumbaiUsdtUsdcLpRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof mumbaiUsdtUsdcLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtUsdcLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtUsdcLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `functionName` set to `"allowance"`.
 */
export function useMumbaiUsdtUsdcLpAllowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof mumbaiUsdtUsdcLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtUsdcLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtUsdcLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useMumbaiUsdtUsdcLpBalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof mumbaiUsdtUsdcLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtUsdcLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtUsdcLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `functionName` set to `"decimals"`.
 */
export function useMumbaiUsdtUsdcLpDecimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof mumbaiUsdtUsdcLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtUsdcLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtUsdcLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `functionName` set to `"name"`.
 */
export function useMumbaiUsdtUsdcLpName<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof mumbaiUsdtUsdcLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtUsdcLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtUsdcLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `functionName` set to `"symbol"`.
 */
export function useMumbaiUsdtUsdcLpSymbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof mumbaiUsdtUsdcLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtUsdcLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtUsdcLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useMumbaiUsdtUsdcLpTotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof mumbaiUsdtUsdcLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtUsdcLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtUsdcLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__.
 */
export function useMumbaiUsdtUsdcLpWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtUsdcLpABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<
        typeof mumbaiUsdtUsdcLpABI,
        TFunctionName,
        TMode
      > & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtUsdcLpABI, TFunctionName, TMode>({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `functionName` set to `"approve"`.
 */
export function useMumbaiUsdtUsdcLpApprove<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtUsdcLpABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof mumbaiUsdtUsdcLpABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtUsdcLpABI, "approve", TMode>({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useMumbaiUsdtUsdcLpDecreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtUsdcLpABI,
          "decreaseAllowance"
        >["request"]["abi"],
        "decreaseAllowance",
        TMode
      > & { functionName?: "decreaseAllowance" }
    : UseContractWriteConfig<
        typeof mumbaiUsdtUsdcLpABI,
        "decreaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "decreaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof mumbaiUsdtUsdcLpABI,
    "decreaseAllowance",
    TMode
  >({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useMumbaiUsdtUsdcLpIncreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtUsdcLpABI,
          "increaseAllowance"
        >["request"]["abi"],
        "increaseAllowance",
        TMode
      > & { functionName?: "increaseAllowance" }
    : UseContractWriteConfig<
        typeof mumbaiUsdtUsdcLpABI,
        "increaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "increaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof mumbaiUsdtUsdcLpABI,
    "increaseAllowance",
    TMode
  >({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `functionName` set to `"initialize"`.
 */
export function useMumbaiUsdtUsdcLpInitialize<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtUsdcLpABI,
          "initialize"
        >["request"]["abi"],
        "initialize",
        TMode
      > & { functionName?: "initialize" }
    : UseContractWriteConfig<
        typeof mumbaiUsdtUsdcLpABI,
        "initialize",
        TMode
      > & {
        abi?: never;
        functionName?: "initialize";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtUsdcLpABI, "initialize", TMode>({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    functionName: "initialize",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `functionName` set to `"mint"`.
 */
export function useMumbaiUsdtUsdcLpMint<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtUsdcLpABI,
          "mint"
        >["request"]["abi"],
        "mint",
        TMode
      > & { functionName?: "mint" }
    : UseContractWriteConfig<typeof mumbaiUsdtUsdcLpABI, "mint", TMode> & {
        abi?: never;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtUsdcLpABI, "mint", TMode>({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `functionName` set to `"transfer"`.
 */
export function useMumbaiUsdtUsdcLpTransfer<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtUsdcLpABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof mumbaiUsdtUsdcLpABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtUsdcLpABI, "transfer", TMode>({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useMumbaiUsdtUsdcLpTransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtUsdcLpABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<
        typeof mumbaiUsdtUsdcLpABI,
        "transferFrom",
        TMode
      > & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtUsdcLpABI, "transferFrom", TMode>({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__.
 */
export function usePrepareMumbaiUsdtUsdcLpWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtUsdcLpABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtUsdcLpABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareMumbaiUsdtUsdcLpApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtUsdcLpABI, "approve">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtUsdcLpABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareMumbaiUsdtUsdcLpDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof mumbaiUsdtUsdcLpABI,
      "decreaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtUsdcLpABI, "decreaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareMumbaiUsdtUsdcLpIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof mumbaiUsdtUsdcLpABI,
      "increaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtUsdcLpABI, "increaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareMumbaiUsdtUsdcLpInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtUsdcLpABI, "initialize">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    functionName: "initialize",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtUsdcLpABI, "initialize">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareMumbaiUsdtUsdcLpMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtUsdcLpABI, "mint">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtUsdcLpABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareMumbaiUsdtUsdcLpTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtUsdcLpABI, "transfer">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtUsdcLpABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareMumbaiUsdtUsdcLpTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtUsdcLpABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtUsdcLpABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__.
 */
export function useMumbaiUsdtUsdcLpEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdtUsdcLpABI, TEventName>,
    "abi" | "address"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdtUsdcLpABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `eventName` set to `"Approval"`.
 */
export function useMumbaiUsdtUsdcLpApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdtUsdcLpABI, "Approval">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdtUsdcLpABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `eventName` set to `"Initialized"`.
 */
export function useMumbaiUsdtUsdcLpInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdtUsdcLpABI, "Initialized">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    eventName: "Initialized",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdtUsdcLpABI, "Initialized">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdtUsdcLpABI}__ and `eventName` set to `"Transfer"`.
 */
export function useMumbaiUsdtUsdcLpTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdtUsdcLpABI, "Transfer">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdtUsdcLpABI,
    address: mumbaiUsdtUsdcLpAddress,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdtUsdcLpABI, "Transfer">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__.
 */
export function useMumbaiUsdtWethLpRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof mumbaiUsdtWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `functionName` set to `"allowance"`.
 */
export function useMumbaiUsdtWethLpAllowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof mumbaiUsdtWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useMumbaiUsdtWethLpBalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof mumbaiUsdtWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `functionName` set to `"decimals"`.
 */
export function useMumbaiUsdtWethLpDecimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof mumbaiUsdtWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `functionName` set to `"name"`.
 */
export function useMumbaiUsdtWethLpName<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof mumbaiUsdtWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `functionName` set to `"symbol"`.
 */
export function useMumbaiUsdtWethLpSymbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof mumbaiUsdtWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useMumbaiUsdtWethLpTotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof mumbaiUsdtWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__.
 */
export function useMumbaiUsdtWethLpWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtWethLpABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<
        typeof mumbaiUsdtWethLpABI,
        TFunctionName,
        TMode
      > & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtWethLpABI, TFunctionName, TMode>({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `functionName` set to `"approve"`.
 */
export function useMumbaiUsdtWethLpApprove<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtWethLpABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof mumbaiUsdtWethLpABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtWethLpABI, "approve", TMode>({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useMumbaiUsdtWethLpDecreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtWethLpABI,
          "decreaseAllowance"
        >["request"]["abi"],
        "decreaseAllowance",
        TMode
      > & { functionName?: "decreaseAllowance" }
    : UseContractWriteConfig<
        typeof mumbaiUsdtWethLpABI,
        "decreaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "decreaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof mumbaiUsdtWethLpABI,
    "decreaseAllowance",
    TMode
  >({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useMumbaiUsdtWethLpIncreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtWethLpABI,
          "increaseAllowance"
        >["request"]["abi"],
        "increaseAllowance",
        TMode
      > & { functionName?: "increaseAllowance" }
    : UseContractWriteConfig<
        typeof mumbaiUsdtWethLpABI,
        "increaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "increaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof mumbaiUsdtWethLpABI,
    "increaseAllowance",
    TMode
  >({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `functionName` set to `"initialize"`.
 */
export function useMumbaiUsdtWethLpInitialize<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtWethLpABI,
          "initialize"
        >["request"]["abi"],
        "initialize",
        TMode
      > & { functionName?: "initialize" }
    : UseContractWriteConfig<
        typeof mumbaiUsdtWethLpABI,
        "initialize",
        TMode
      > & {
        abi?: never;
        functionName?: "initialize";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtWethLpABI, "initialize", TMode>({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    functionName: "initialize",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `functionName` set to `"mint"`.
 */
export function useMumbaiUsdtWethLpMint<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtWethLpABI,
          "mint"
        >["request"]["abi"],
        "mint",
        TMode
      > & { functionName?: "mint" }
    : UseContractWriteConfig<typeof mumbaiUsdtWethLpABI, "mint", TMode> & {
        abi?: never;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtWethLpABI, "mint", TMode>({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `functionName` set to `"transfer"`.
 */
export function useMumbaiUsdtWethLpTransfer<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtWethLpABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof mumbaiUsdtWethLpABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtWethLpABI, "transfer", TMode>({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useMumbaiUsdtWethLpTransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtWethLpABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<
        typeof mumbaiUsdtWethLpABI,
        "transferFrom",
        TMode
      > & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtWethLpABI, "transferFrom", TMode>({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__.
 */
export function usePrepareMumbaiUsdtWethLpWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtWethLpABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtWethLpABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareMumbaiUsdtWethLpApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtWethLpABI, "approve">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtWethLpABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareMumbaiUsdtWethLpDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof mumbaiUsdtWethLpABI,
      "decreaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtWethLpABI, "decreaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareMumbaiUsdtWethLpIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof mumbaiUsdtWethLpABI,
      "increaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtWethLpABI, "increaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareMumbaiUsdtWethLpInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtWethLpABI, "initialize">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    functionName: "initialize",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtWethLpABI, "initialize">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareMumbaiUsdtWethLpMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtWethLpABI, "mint">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtWethLpABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareMumbaiUsdtWethLpTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtWethLpABI, "transfer">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtWethLpABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareMumbaiUsdtWethLpTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtWethLpABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtWethLpABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__.
 */
export function useMumbaiUsdtWethLpEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdtWethLpABI, TEventName>,
    "abi" | "address"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdtWethLpABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `eventName` set to `"Approval"`.
 */
export function useMumbaiUsdtWethLpApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdtWethLpABI, "Approval">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdtWethLpABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `eventName` set to `"Initialized"`.
 */
export function useMumbaiUsdtWethLpInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdtWethLpABI, "Initialized">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    eventName: "Initialized",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdtWethLpABI, "Initialized">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdtWethLpABI}__ and `eventName` set to `"Transfer"`.
 */
export function useMumbaiUsdtWethLpTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdtWethLpABI, "Transfer">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdtWethLpABI,
    address: mumbaiUsdtWethLpAddress,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdtWethLpABI, "Transfer">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__.
 */
export function useMumbaiUsdtMaticLpRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof mumbaiUsdtMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `functionName` set to `"allowance"`.
 */
export function useMumbaiUsdtMaticLpAllowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof mumbaiUsdtMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useMumbaiUsdtMaticLpBalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof mumbaiUsdtMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `functionName` set to `"decimals"`.
 */
export function useMumbaiUsdtMaticLpDecimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof mumbaiUsdtMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `functionName` set to `"name"`.
 */
export function useMumbaiUsdtMaticLpName<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof mumbaiUsdtMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `functionName` set to `"symbol"`.
 */
export function useMumbaiUsdtMaticLpSymbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof mumbaiUsdtMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useMumbaiUsdtMaticLpTotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof mumbaiUsdtMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdtMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdtMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__.
 */
export function useMumbaiUsdtMaticLpWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtMaticLpABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<
        typeof mumbaiUsdtMaticLpABI,
        TFunctionName,
        TMode
      > & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtMaticLpABI, TFunctionName, TMode>({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `functionName` set to `"approve"`.
 */
export function useMumbaiUsdtMaticLpApprove<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtMaticLpABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof mumbaiUsdtMaticLpABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtMaticLpABI, "approve", TMode>({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useMumbaiUsdtMaticLpDecreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtMaticLpABI,
          "decreaseAllowance"
        >["request"]["abi"],
        "decreaseAllowance",
        TMode
      > & { functionName?: "decreaseAllowance" }
    : UseContractWriteConfig<
        typeof mumbaiUsdtMaticLpABI,
        "decreaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "decreaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof mumbaiUsdtMaticLpABI,
    "decreaseAllowance",
    TMode
  >({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useMumbaiUsdtMaticLpIncreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtMaticLpABI,
          "increaseAllowance"
        >["request"]["abi"],
        "increaseAllowance",
        TMode
      > & { functionName?: "increaseAllowance" }
    : UseContractWriteConfig<
        typeof mumbaiUsdtMaticLpABI,
        "increaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "increaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof mumbaiUsdtMaticLpABI,
    "increaseAllowance",
    TMode
  >({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `functionName` set to `"initialize"`.
 */
export function useMumbaiUsdtMaticLpInitialize<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtMaticLpABI,
          "initialize"
        >["request"]["abi"],
        "initialize",
        TMode
      > & { functionName?: "initialize" }
    : UseContractWriteConfig<
        typeof mumbaiUsdtMaticLpABI,
        "initialize",
        TMode
      > & {
        abi?: never;
        functionName?: "initialize";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtMaticLpABI, "initialize", TMode>({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    functionName: "initialize",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `functionName` set to `"mint"`.
 */
export function useMumbaiUsdtMaticLpMint<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtMaticLpABI,
          "mint"
        >["request"]["abi"],
        "mint",
        TMode
      > & { functionName?: "mint" }
    : UseContractWriteConfig<typeof mumbaiUsdtMaticLpABI, "mint", TMode> & {
        abi?: never;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtMaticLpABI, "mint", TMode>({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `functionName` set to `"transfer"`.
 */
export function useMumbaiUsdtMaticLpTransfer<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtMaticLpABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof mumbaiUsdtMaticLpABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtMaticLpABI, "transfer", TMode>({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useMumbaiUsdtMaticLpTransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdtMaticLpABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<
        typeof mumbaiUsdtMaticLpABI,
        "transferFrom",
        TMode
      > & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdtMaticLpABI, "transferFrom", TMode>({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__.
 */
export function usePrepareMumbaiUsdtMaticLpWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtMaticLpABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtMaticLpABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareMumbaiUsdtMaticLpApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtMaticLpABI, "approve">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtMaticLpABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareMumbaiUsdtMaticLpDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof mumbaiUsdtMaticLpABI,
      "decreaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtMaticLpABI, "decreaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareMumbaiUsdtMaticLpIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof mumbaiUsdtMaticLpABI,
      "increaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtMaticLpABI, "increaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareMumbaiUsdtMaticLpInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtMaticLpABI, "initialize">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    functionName: "initialize",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtMaticLpABI, "initialize">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareMumbaiUsdtMaticLpMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtMaticLpABI, "mint">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtMaticLpABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareMumbaiUsdtMaticLpTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtMaticLpABI, "transfer">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtMaticLpABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareMumbaiUsdtMaticLpTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdtMaticLpABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdtMaticLpABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__.
 */
export function useMumbaiUsdtMaticLpEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdtMaticLpABI, TEventName>,
    "abi" | "address"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdtMaticLpABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `eventName` set to `"Approval"`.
 */
export function useMumbaiUsdtMaticLpApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdtMaticLpABI, "Approval">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdtMaticLpABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `eventName` set to `"Initialized"`.
 */
export function useMumbaiUsdtMaticLpInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdtMaticLpABI, "Initialized">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    eventName: "Initialized",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdtMaticLpABI, "Initialized">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdtMaticLpABI}__ and `eventName` set to `"Transfer"`.
 */
export function useMumbaiUsdtMaticLpTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdtMaticLpABI, "Transfer">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdtMaticLpABI,
    address: mumbaiUsdtMaticLpAddress,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdtMaticLpABI, "Transfer">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__.
 */
export function useMumbaiUsdcWethLpRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof mumbaiUsdcWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `functionName` set to `"allowance"`.
 */
export function useMumbaiUsdcWethLpAllowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof mumbaiUsdcWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useMumbaiUsdcWethLpBalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof mumbaiUsdcWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `functionName` set to `"decimals"`.
 */
export function useMumbaiUsdcWethLpDecimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof mumbaiUsdcWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `functionName` set to `"name"`.
 */
export function useMumbaiUsdcWethLpName<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof mumbaiUsdcWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `functionName` set to `"symbol"`.
 */
export function useMumbaiUsdcWethLpSymbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof mumbaiUsdcWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useMumbaiUsdcWethLpTotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof mumbaiUsdcWethLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcWethLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcWethLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__.
 */
export function useMumbaiUsdcWethLpWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcWethLpABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<
        typeof mumbaiUsdcWethLpABI,
        TFunctionName,
        TMode
      > & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdcWethLpABI, TFunctionName, TMode>({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `functionName` set to `"approve"`.
 */
export function useMumbaiUsdcWethLpApprove<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcWethLpABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof mumbaiUsdcWethLpABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdcWethLpABI, "approve", TMode>({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useMumbaiUsdcWethLpDecreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcWethLpABI,
          "decreaseAllowance"
        >["request"]["abi"],
        "decreaseAllowance",
        TMode
      > & { functionName?: "decreaseAllowance" }
    : UseContractWriteConfig<
        typeof mumbaiUsdcWethLpABI,
        "decreaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "decreaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof mumbaiUsdcWethLpABI,
    "decreaseAllowance",
    TMode
  >({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useMumbaiUsdcWethLpIncreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcWethLpABI,
          "increaseAllowance"
        >["request"]["abi"],
        "increaseAllowance",
        TMode
      > & { functionName?: "increaseAllowance" }
    : UseContractWriteConfig<
        typeof mumbaiUsdcWethLpABI,
        "increaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "increaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof mumbaiUsdcWethLpABI,
    "increaseAllowance",
    TMode
  >({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `functionName` set to `"initialize"`.
 */
export function useMumbaiUsdcWethLpInitialize<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcWethLpABI,
          "initialize"
        >["request"]["abi"],
        "initialize",
        TMode
      > & { functionName?: "initialize" }
    : UseContractWriteConfig<
        typeof mumbaiUsdcWethLpABI,
        "initialize",
        TMode
      > & {
        abi?: never;
        functionName?: "initialize";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdcWethLpABI, "initialize", TMode>({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    functionName: "initialize",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `functionName` set to `"mint"`.
 */
export function useMumbaiUsdcWethLpMint<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcWethLpABI,
          "mint"
        >["request"]["abi"],
        "mint",
        TMode
      > & { functionName?: "mint" }
    : UseContractWriteConfig<typeof mumbaiUsdcWethLpABI, "mint", TMode> & {
        abi?: never;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdcWethLpABI, "mint", TMode>({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `functionName` set to `"transfer"`.
 */
export function useMumbaiUsdcWethLpTransfer<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcWethLpABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof mumbaiUsdcWethLpABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdcWethLpABI, "transfer", TMode>({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useMumbaiUsdcWethLpTransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcWethLpABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<
        typeof mumbaiUsdcWethLpABI,
        "transferFrom",
        TMode
      > & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdcWethLpABI, "transferFrom", TMode>({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__.
 */
export function usePrepareMumbaiUsdcWethLpWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdcWethLpABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcWethLpABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareMumbaiUsdcWethLpApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdcWethLpABI, "approve">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcWethLpABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareMumbaiUsdcWethLpDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof mumbaiUsdcWethLpABI,
      "decreaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcWethLpABI, "decreaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareMumbaiUsdcWethLpIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof mumbaiUsdcWethLpABI,
      "increaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcWethLpABI, "increaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareMumbaiUsdcWethLpInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdcWethLpABI, "initialize">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    functionName: "initialize",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcWethLpABI, "initialize">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareMumbaiUsdcWethLpMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdcWethLpABI, "mint">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcWethLpABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareMumbaiUsdcWethLpTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdcWethLpABI, "transfer">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcWethLpABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareMumbaiUsdcWethLpTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdcWethLpABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcWethLpABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__.
 */
export function useMumbaiUsdcWethLpEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdcWethLpABI, TEventName>,
    "abi" | "address"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdcWethLpABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `eventName` set to `"Approval"`.
 */
export function useMumbaiUsdcWethLpApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdcWethLpABI, "Approval">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdcWethLpABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `eventName` set to `"Initialized"`.
 */
export function useMumbaiUsdcWethLpInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdcWethLpABI, "Initialized">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    eventName: "Initialized",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdcWethLpABI, "Initialized">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdcWethLpABI}__ and `eventName` set to `"Transfer"`.
 */
export function useMumbaiUsdcWethLpTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdcWethLpABI, "Transfer">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdcWethLpABI,
    address: mumbaiUsdcWethLpAddress,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdcWethLpABI, "Transfer">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__.
 */
export function useMumbaiUsdcMaticLpRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof mumbaiUsdcMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `functionName` set to `"allowance"`.
 */
export function useMumbaiUsdcMaticLpAllowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof mumbaiUsdcMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useMumbaiUsdcMaticLpBalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof mumbaiUsdcMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `functionName` set to `"decimals"`.
 */
export function useMumbaiUsdcMaticLpDecimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof mumbaiUsdcMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `functionName` set to `"name"`.
 */
export function useMumbaiUsdcMaticLpName<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof mumbaiUsdcMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `functionName` set to `"symbol"`.
 */
export function useMumbaiUsdcMaticLpSymbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof mumbaiUsdcMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useMumbaiUsdcMaticLpTotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof mumbaiUsdcMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiUsdcMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof mumbaiUsdcMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__.
 */
export function useMumbaiUsdcMaticLpWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcMaticLpABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<
        typeof mumbaiUsdcMaticLpABI,
        TFunctionName,
        TMode
      > & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdcMaticLpABI, TFunctionName, TMode>({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `functionName` set to `"approve"`.
 */
export function useMumbaiUsdcMaticLpApprove<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcMaticLpABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof mumbaiUsdcMaticLpABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdcMaticLpABI, "approve", TMode>({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useMumbaiUsdcMaticLpDecreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcMaticLpABI,
          "decreaseAllowance"
        >["request"]["abi"],
        "decreaseAllowance",
        TMode
      > & { functionName?: "decreaseAllowance" }
    : UseContractWriteConfig<
        typeof mumbaiUsdcMaticLpABI,
        "decreaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "decreaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof mumbaiUsdcMaticLpABI,
    "decreaseAllowance",
    TMode
  >({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useMumbaiUsdcMaticLpIncreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcMaticLpABI,
          "increaseAllowance"
        >["request"]["abi"],
        "increaseAllowance",
        TMode
      > & { functionName?: "increaseAllowance" }
    : UseContractWriteConfig<
        typeof mumbaiUsdcMaticLpABI,
        "increaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "increaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof mumbaiUsdcMaticLpABI,
    "increaseAllowance",
    TMode
  >({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `functionName` set to `"initialize"`.
 */
export function useMumbaiUsdcMaticLpInitialize<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcMaticLpABI,
          "initialize"
        >["request"]["abi"],
        "initialize",
        TMode
      > & { functionName?: "initialize" }
    : UseContractWriteConfig<
        typeof mumbaiUsdcMaticLpABI,
        "initialize",
        TMode
      > & {
        abi?: never;
        functionName?: "initialize";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdcMaticLpABI, "initialize", TMode>({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    functionName: "initialize",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `functionName` set to `"mint"`.
 */
export function useMumbaiUsdcMaticLpMint<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcMaticLpABI,
          "mint"
        >["request"]["abi"],
        "mint",
        TMode
      > & { functionName?: "mint" }
    : UseContractWriteConfig<typeof mumbaiUsdcMaticLpABI, "mint", TMode> & {
        abi?: never;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdcMaticLpABI, "mint", TMode>({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `functionName` set to `"transfer"`.
 */
export function useMumbaiUsdcMaticLpTransfer<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcMaticLpABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof mumbaiUsdcMaticLpABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdcMaticLpABI, "transfer", TMode>({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useMumbaiUsdcMaticLpTransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiUsdcMaticLpABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<
        typeof mumbaiUsdcMaticLpABI,
        "transferFrom",
        TMode
      > & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiUsdcMaticLpABI, "transferFrom", TMode>({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__.
 */
export function usePrepareMumbaiUsdcMaticLpWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdcMaticLpABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcMaticLpABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareMumbaiUsdcMaticLpApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdcMaticLpABI, "approve">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcMaticLpABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareMumbaiUsdcMaticLpDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof mumbaiUsdcMaticLpABI,
      "decreaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcMaticLpABI, "decreaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareMumbaiUsdcMaticLpIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof mumbaiUsdcMaticLpABI,
      "increaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcMaticLpABI, "increaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareMumbaiUsdcMaticLpInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdcMaticLpABI, "initialize">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    functionName: "initialize",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcMaticLpABI, "initialize">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareMumbaiUsdcMaticLpMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdcMaticLpABI, "mint">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcMaticLpABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareMumbaiUsdcMaticLpTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdcMaticLpABI, "transfer">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcMaticLpABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareMumbaiUsdcMaticLpTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiUsdcMaticLpABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiUsdcMaticLpABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__.
 */
export function useMumbaiUsdcMaticLpEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdcMaticLpABI, TEventName>,
    "abi" | "address"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdcMaticLpABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `eventName` set to `"Approval"`.
 */
export function useMumbaiUsdcMaticLpApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdcMaticLpABI, "Approval">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdcMaticLpABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `eventName` set to `"Initialized"`.
 */
export function useMumbaiUsdcMaticLpInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdcMaticLpABI, "Initialized">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    eventName: "Initialized",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdcMaticLpABI, "Initialized">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiUsdcMaticLpABI}__ and `eventName` set to `"Transfer"`.
 */
export function useMumbaiUsdcMaticLpTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiUsdcMaticLpABI, "Transfer">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiUsdcMaticLpABI,
    address: mumbaiUsdcMaticLpAddress,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof mumbaiUsdcMaticLpABI, "Transfer">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__.
 */
export function useMumbaiWethMaticLpRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof mumbaiWethMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiWethMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    ...config,
  } as UseContractReadConfig<typeof mumbaiWethMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `functionName` set to `"allowance"`.
 */
export function useMumbaiWethMaticLpAllowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof mumbaiWethMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiWethMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof mumbaiWethMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useMumbaiWethMaticLpBalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof mumbaiWethMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiWethMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof mumbaiWethMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `functionName` set to `"decimals"`.
 */
export function useMumbaiWethMaticLpDecimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof mumbaiWethMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiWethMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof mumbaiWethMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `functionName` set to `"name"`.
 */
export function useMumbaiWethMaticLpName<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof mumbaiWethMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiWethMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof mumbaiWethMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `functionName` set to `"symbol"`.
 */
export function useMumbaiWethMaticLpSymbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof mumbaiWethMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiWethMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof mumbaiWethMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useMumbaiWethMaticLpTotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof mumbaiWethMaticLpABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof mumbaiWethMaticLpABI,
      TFunctionName,
      TSelectData
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof mumbaiWethMaticLpABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__.
 */
export function useMumbaiWethMaticLpWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiWethMaticLpABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<
        typeof mumbaiWethMaticLpABI,
        TFunctionName,
        TMode
      > & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof mumbaiWethMaticLpABI, TFunctionName, TMode>({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `functionName` set to `"approve"`.
 */
export function useMumbaiWethMaticLpApprove<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiWethMaticLpABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof mumbaiWethMaticLpABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiWethMaticLpABI, "approve", TMode>({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useMumbaiWethMaticLpDecreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiWethMaticLpABI,
          "decreaseAllowance"
        >["request"]["abi"],
        "decreaseAllowance",
        TMode
      > & { functionName?: "decreaseAllowance" }
    : UseContractWriteConfig<
        typeof mumbaiWethMaticLpABI,
        "decreaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "decreaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof mumbaiWethMaticLpABI,
    "decreaseAllowance",
    TMode
  >({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useMumbaiWethMaticLpIncreaseAllowance<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiWethMaticLpABI,
          "increaseAllowance"
        >["request"]["abi"],
        "increaseAllowance",
        TMode
      > & { functionName?: "increaseAllowance" }
    : UseContractWriteConfig<
        typeof mumbaiWethMaticLpABI,
        "increaseAllowance",
        TMode
      > & {
        abi?: never;
        functionName?: "increaseAllowance";
      } = {} as any
) {
  return useContractWrite<
    typeof mumbaiWethMaticLpABI,
    "increaseAllowance",
    TMode
  >({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `functionName` set to `"initialize"`.
 */
export function useMumbaiWethMaticLpInitialize<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiWethMaticLpABI,
          "initialize"
        >["request"]["abi"],
        "initialize",
        TMode
      > & { functionName?: "initialize" }
    : UseContractWriteConfig<
        typeof mumbaiWethMaticLpABI,
        "initialize",
        TMode
      > & {
        abi?: never;
        functionName?: "initialize";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiWethMaticLpABI, "initialize", TMode>({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    functionName: "initialize",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `functionName` set to `"mint"`.
 */
export function useMumbaiWethMaticLpMint<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiWethMaticLpABI,
          "mint"
        >["request"]["abi"],
        "mint",
        TMode
      > & { functionName?: "mint" }
    : UseContractWriteConfig<typeof mumbaiWethMaticLpABI, "mint", TMode> & {
        abi?: never;
        functionName?: "mint";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiWethMaticLpABI, "mint", TMode>({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    functionName: "mint",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `functionName` set to `"transfer"`.
 */
export function useMumbaiWethMaticLpTransfer<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiWethMaticLpABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof mumbaiWethMaticLpABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiWethMaticLpABI, "transfer", TMode>({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useMumbaiWethMaticLpTransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mumbaiWethMaticLpABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<
        typeof mumbaiWethMaticLpABI,
        "transferFrom",
        TMode
      > & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof mumbaiWethMaticLpABI, "transferFrom", TMode>({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__.
 */
export function usePrepareMumbaiWethMaticLpWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiWethMaticLpABI, TFunctionName>,
    "abi" | "address"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiWethMaticLpABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareMumbaiWethMaticLpApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiWethMaticLpABI, "approve">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiWethMaticLpABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareMumbaiWethMaticLpDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof mumbaiWethMaticLpABI,
      "decreaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    functionName: "decreaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiWethMaticLpABI, "decreaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareMumbaiWethMaticLpIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof mumbaiWethMaticLpABI,
      "increaseAllowance"
    >,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    functionName: "increaseAllowance",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiWethMaticLpABI, "increaseAllowance">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareMumbaiWethMaticLpInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiWethMaticLpABI, "initialize">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    functionName: "initialize",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiWethMaticLpABI, "initialize">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareMumbaiWethMaticLpMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiWethMaticLpABI, "mint">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    functionName: "mint",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiWethMaticLpABI, "mint">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareMumbaiWethMaticLpTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiWethMaticLpABI, "transfer">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiWethMaticLpABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareMumbaiWethMaticLpTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mumbaiWethMaticLpABI, "transferFrom">,
    "abi" | "address" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof mumbaiWethMaticLpABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__.
 */
export function useMumbaiWethMaticLpEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof mumbaiWethMaticLpABI, TEventName>,
    "abi" | "address"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    ...config,
  } as UseContractEventConfig<typeof mumbaiWethMaticLpABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `eventName` set to `"Approval"`.
 */
export function useMumbaiWethMaticLpApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiWethMaticLpABI, "Approval">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof mumbaiWethMaticLpABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `eventName` set to `"Initialized"`.
 */
export function useMumbaiWethMaticLpInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiWethMaticLpABI, "Initialized">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    eventName: "Initialized",
    ...config,
  } as UseContractEventConfig<typeof mumbaiWethMaticLpABI, "Initialized">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mumbaiWethMaticLpABI}__ and `eventName` set to `"Transfer"`.
 */
export function useMumbaiWethMaticLpTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof mumbaiWethMaticLpABI, "Transfer">,
    "abi" | "address" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: mumbaiWethMaticLpABI,
    address: mumbaiWethMaticLpAddress,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof mumbaiWethMaticLpABI, "Transfer">);
}
